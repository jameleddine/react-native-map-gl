 /* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.Data', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.DeviceInfo', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.EventInfo', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.IoTId', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.OutputData', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.Query', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.Query.Sort', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.QueryDeviceRequest', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.QueryDeviceResponse', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.RegisterRequest', null, global);
goog.exportSymbol('proto.xcite.iot.alibaba.v1.Response', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.RegisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.RegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.RegisterRequest.displayName = 'proto.xcite.iot.alibaba.v1.RegisterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.Response.displayName = 'proto.xcite.iot.alibaba.v1.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.DeviceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.DeviceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.DeviceInfo.displayName = 'proto.xcite.iot.alibaba.v1.DeviceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.QueryDeviceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.QueryDeviceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.QueryDeviceRequest.displayName = 'proto.xcite.iot.alibaba.v1.QueryDeviceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.QueryDeviceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.QueryDeviceResponse.displayName = 'proto.xcite.iot.alibaba.v1.QueryDeviceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.Query.displayName = 'proto.xcite.iot.alibaba.v1.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.alibaba.v1.Data.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.Data.displayName = 'proto.xcite.iot.alibaba.v1.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.EventInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.EventInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.EventInfo.displayName = 'proto.xcite.iot.alibaba.v1.EventInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.OutputData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.OutputData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.OutputData.displayName = 'proto.xcite.iot.alibaba.v1.OutputData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.alibaba.v1.IoTId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.alibaba.v1.IoTId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.alibaba.v1.IoTId.displayName = 'proto.xcite.iot.alibaba.v1.IoTId';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.RegisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.RegisterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.toObject = function(includeInstance, msg) {
  var obj = {
    iotId: (f = msg.getIotId()) && proto.xcite.iot.alibaba.v1.IoTId.toObject(includeInstance, f),
    productKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.RegisterRequest}
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.RegisterRequest;
  return proto.xcite.iot.alibaba.v1.RegisterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.RegisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.RegisterRequest}
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.alibaba.v1.IoTId;
      reader.readMessage(value,proto.xcite.iot.alibaba.v1.IoTId.deserializeBinaryFromReader);
      msg.setIotId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.RegisterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.RegisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIotId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.alibaba.v1.IoTId.serializeBinaryToWriter
    );
  }
  f = message.getProductKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional IoTId iot_id = 1;
 * @return {?proto.xcite.iot.alibaba.v1.IoTId}
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.getIotId = function() {
  return /** @type{?proto.xcite.iot.alibaba.v1.IoTId} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.alibaba.v1.IoTId, 1));
};


/** @param {?proto.xcite.iot.alibaba.v1.IoTId|undefined} value */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.setIotId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.clearIotId = function() {
  this.setIotId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.hasIotId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string product_key = 2;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.getProductKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.setProductKey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_name = 3;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.RegisterRequest.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.Response.toObject = function(includeInstance, msg) {
  var obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    success: jspb.Message.getFieldWithDefault(msg, 2, false),
    info: (f = msg.getInfo()) && proto.xcite.iot.alibaba.v1.DeviceInfo.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.xcite.iot.alibaba.v1.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.Response}
 */
proto.xcite.iot.alibaba.v1.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.Response;
  return proto.xcite.iot.alibaba.v1.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.Response}
 */
proto.xcite.iot.alibaba.v1.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = new proto.xcite.iot.alibaba.v1.DeviceInfo;
      reader.readMessage(value,proto.xcite.iot.alibaba.v1.DeviceInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 4:
      var value = new proto.xcite.iot.alibaba.v1.Data;
      reader.readMessage(value,proto.xcite.iot.alibaba.v1.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.xcite.iot.alibaba.v1.DeviceInfo.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.xcite.iot.alibaba.v1.Data.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.Response.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.Response.prototype.setRequestId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool success = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.Response.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.xcite.iot.alibaba.v1.Response.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional DeviceInfo info = 3;
 * @return {?proto.xcite.iot.alibaba.v1.DeviceInfo}
 */
proto.xcite.iot.alibaba.v1.Response.prototype.getInfo = function() {
  return /** @type{?proto.xcite.iot.alibaba.v1.DeviceInfo} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.alibaba.v1.DeviceInfo, 3));
};


/** @param {?proto.xcite.iot.alibaba.v1.DeviceInfo|undefined} value */
proto.xcite.iot.alibaba.v1.Response.prototype.setInfo = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.alibaba.v1.Response.prototype.clearInfo = function() {
  this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.Response.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Data data = 4;
 * @return {?proto.xcite.iot.alibaba.v1.Data}
 */
proto.xcite.iot.alibaba.v1.Response.prototype.getData = function() {
  return /** @type{?proto.xcite.iot.alibaba.v1.Data} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.alibaba.v1.Data, 4));
};


/** @param {?proto.xcite.iot.alibaba.v1.Data|undefined} value */
proto.xcite.iot.alibaba.v1.Response.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.alibaba.v1.Response.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.Response.prototype.hasData = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.DeviceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.DeviceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.toObject = function(includeInstance, msg) {
  var obj = {
    productKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceSecret: jspb.Message.getFieldWithDefault(msg, 3, ""),
    iotId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gmtCreate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gmtModified: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.DeviceInfo}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.DeviceInfo;
  return proto.xcite.iot.alibaba.v1.DeviceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.DeviceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.DeviceInfo}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceSecret(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIotId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGmtCreate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGmtModified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.DeviceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.DeviceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceSecret();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIotId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGmtCreate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGmtModified();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string product_key = 1;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.getProductKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.setProductKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_name = 2;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.setDeviceName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_secret = 3;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.getDeviceSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.setDeviceSecret = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string iot_id = 4;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.getIotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.setIotId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string gmt_create = 5;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.getGmtCreate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.setGmtCreate = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gmt_modified = 6;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.getGmtModified = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.DeviceInfo.prototype.setGmtModified = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.QueryDeviceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.QueryDeviceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.QueryDeviceRequest.toObject = function(includeInstance, msg) {
  var obj = {
    productKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.QueryDeviceRequest}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.QueryDeviceRequest;
  return proto.xcite.iot.alibaba.v1.QueryDeviceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.QueryDeviceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.QueryDeviceRequest}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.QueryDeviceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.QueryDeviceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.QueryDeviceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string product_key = 1;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceRequest.prototype.getProductKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.QueryDeviceRequest.prototype.setProductKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.QueryDeviceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.QueryDeviceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.toObject = function(includeInstance, msg) {
  var obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    success: jspb.Message.getFieldWithDefault(msg, 2, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
    info: (f = msg.getInfo()) && proto.xcite.iot.alibaba.v1.DeviceInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.QueryDeviceResponse}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.QueryDeviceResponse;
  return proto.xcite.iot.alibaba.v1.QueryDeviceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.QueryDeviceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.QueryDeviceResponse}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 8:
      var value = new proto.xcite.iot.alibaba.v1.DeviceInfo;
      reader.readMessage(value,proto.xcite.iot.alibaba.v1.DeviceInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.QueryDeviceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.QueryDeviceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.xcite.iot.alibaba.v1.DeviceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.setRequestId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool success = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string error_message = 3;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.setErrorMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional DeviceInfo info = 8;
 * @return {?proto.xcite.iot.alibaba.v1.DeviceInfo}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.getInfo = function() {
  return /** @type{?proto.xcite.iot.alibaba.v1.DeviceInfo} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.alibaba.v1.DeviceInfo, 8));
};


/** @param {?proto.xcite.iot.alibaba.v1.DeviceInfo|undefined} value */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.setInfo = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.clearInfo = function() {
  this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.QueryDeviceResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.Query.toObject = function(includeInstance, msg) {
  var obj = {
    iotId: (f = msg.getIotId()) && proto.xcite.iot.alibaba.v1.IoTId.toObject(includeInstance, f),
    identifier: jspb.Message.getFieldWithDefault(msg, 2, ""),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    sort: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.Query}
 */
proto.xcite.iot.alibaba.v1.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.Query;
  return proto.xcite.iot.alibaba.v1.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.Query}
 */
proto.xcite.iot.alibaba.v1.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.alibaba.v1.IoTId;
      reader.readMessage(value,proto.xcite.iot.alibaba.v1.IoTId.deserializeBinaryFromReader);
      msg.setIotId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 5:
      var value = /** @type {!proto.xcite.iot.alibaba.v1.Query.Sort} */ (reader.readEnum());
      msg.setSort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIotId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.alibaba.v1.IoTId.serializeBinaryToWriter
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSort();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.xcite.iot.alibaba.v1.Query.Sort = {
  DESC: 0,
  ASC: 1
};

/**
 * optional IoTId iot_id = 1;
 * @return {?proto.xcite.iot.alibaba.v1.IoTId}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.getIotId = function() {
  return /** @type{?proto.xcite.iot.alibaba.v1.IoTId} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.alibaba.v1.IoTId, 1));
};


/** @param {?proto.xcite.iot.alibaba.v1.IoTId|undefined} value */
proto.xcite.iot.alibaba.v1.Query.prototype.setIotId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.alibaba.v1.Query.prototype.clearIotId = function() {
  this.setIotId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.hasIotId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string identifier = 2;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.Query.prototype.setIdentifier = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.alibaba.v1.Query.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.alibaba.v1.Query.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.alibaba.v1.Query.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.alibaba.v1.Query.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Sort sort = 5;
 * @return {!proto.xcite.iot.alibaba.v1.Query.Sort}
 */
proto.xcite.iot.alibaba.v1.Query.prototype.getSort = function() {
  return /** @type {!proto.xcite.iot.alibaba.v1.Query.Sort} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.xcite.iot.alibaba.v1.Query.Sort} value */
proto.xcite.iot.alibaba.v1.Query.prototype.setSort = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.alibaba.v1.Data.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.Data.toObject = function(includeInstance, msg) {
  var obj = {
    eventInfoList: jspb.Message.toObjectList(msg.getEventInfoList(),
    proto.xcite.iot.alibaba.v1.EventInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.Data}
 */
proto.xcite.iot.alibaba.v1.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.Data;
  return proto.xcite.iot.alibaba.v1.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.Data}
 */
proto.xcite.iot.alibaba.v1.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.alibaba.v1.EventInfo;
      reader.readMessage(value,proto.xcite.iot.alibaba.v1.EventInfo.deserializeBinaryFromReader);
      msg.addEventInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.alibaba.v1.EventInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EventInfo event_info = 1;
 * @return {!Array<!proto.xcite.iot.alibaba.v1.EventInfo>}
 */
proto.xcite.iot.alibaba.v1.Data.prototype.getEventInfoList = function() {
  return /** @type{!Array<!proto.xcite.iot.alibaba.v1.EventInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.alibaba.v1.EventInfo, 1));
};


/** @param {!Array<!proto.xcite.iot.alibaba.v1.EventInfo>} value */
proto.xcite.iot.alibaba.v1.Data.prototype.setEventInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.alibaba.v1.EventInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.alibaba.v1.EventInfo}
 */
proto.xcite.iot.alibaba.v1.Data.prototype.addEventInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.alibaba.v1.EventInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.alibaba.v1.Data.prototype.clearEventInfoList = function() {
  this.setEventInfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.EventInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.EventInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.EventInfo.toObject = function(includeInstance, msg) {
  var obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    outputData: (f = msg.getOutputData()) && proto.xcite.iot.alibaba.v1.OutputData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.EventInfo}
 */
proto.xcite.iot.alibaba.v1.EventInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.EventInfo;
  return proto.xcite.iot.alibaba.v1.EventInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.EventInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.EventInfo}
 */
proto.xcite.iot.alibaba.v1.EventInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 3:
      var value = new proto.xcite.iot.alibaba.v1.OutputData;
      reader.readMessage(value,proto.xcite.iot.alibaba.v1.OutputData.deserializeBinaryFromReader);
      msg.setOutputData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.EventInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.EventInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.EventInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOutputData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.xcite.iot.alibaba.v1.OutputData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.hasTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OutputData output_data = 3;
 * @return {?proto.xcite.iot.alibaba.v1.OutputData}
 */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.getOutputData = function() {
  return /** @type{?proto.xcite.iot.alibaba.v1.OutputData} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.alibaba.v1.OutputData, 3));
};


/** @param {?proto.xcite.iot.alibaba.v1.OutputData|undefined} value */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.setOutputData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.clearOutputData = function() {
  this.setOutputData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.alibaba.v1.EventInfo.prototype.hasOutputData = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.OutputData.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.OutputData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.OutputData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.OutputData.toObject = function(includeInstance, msg) {
  var obj = {
    outputDataMap: (f = msg.getOutputDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.OutputData}
 */
proto.xcite.iot.alibaba.v1.OutputData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.OutputData;
  return proto.xcite.iot.alibaba.v1.OutputData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.OutputData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.OutputData}
 */
proto.xcite.iot.alibaba.v1.OutputData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getOutputDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readUint64, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.OutputData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.OutputData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.OutputData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.OutputData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeUint64);
  }
};


/**
 * map<string, uint64> output_data = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.xcite.iot.alibaba.v1.OutputData.prototype.getOutputDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.xcite.iot.alibaba.v1.OutputData.prototype.clearOutputDataMap = function() {
  this.getOutputDataMap().clear();
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.alibaba.v1.IoTId.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.alibaba.v1.IoTId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.alibaba.v1.IoTId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.IoTId.toObject = function(includeInstance, msg) {
  var obj = {
    iotId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.alibaba.v1.IoTId}
 */
proto.xcite.iot.alibaba.v1.IoTId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.alibaba.v1.IoTId;
  return proto.xcite.iot.alibaba.v1.IoTId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.alibaba.v1.IoTId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.alibaba.v1.IoTId}
 */
proto.xcite.iot.alibaba.v1.IoTId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIotId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.alibaba.v1.IoTId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.alibaba.v1.IoTId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.alibaba.v1.IoTId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.alibaba.v1.IoTId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIotId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string iot_id = 1;
 * @return {string}
 */
proto.xcite.iot.alibaba.v1.IoTId.prototype.getIotId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.alibaba.v1.IoTId.prototype.setIotId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.xcite.iot.alibaba.v1);
