 /* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var x$cite_io_protos_model_basic_pb = require('../../../x-cite.io/protos/model/basic_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_basic_pb);
var x$cite_io_protos_model_tracking_pb = require('../../../x-cite.io/protos/model/tracking_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_tracking_pb);
var x$cite_io_protos_model_vehicle_pb = require('../../../x-cite.io/protos/model/vehicle_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_vehicle_pb);
var x$cite_io_protos_model_sim_pb = require('../../../x-cite.io/protos/model/sim_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_sim_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.EnvironmentResponse', null, global);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.ListRelationsResponse', null, global);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.ListThingsRequest', null, global);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.ListThingsResponse', null, global);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse', null, global);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.Relation', null, global);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.RelationList', null, global);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.ThingList', null, global);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.UUIDList', null, global);
goog.exportSymbol('proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.EnvironmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.displayName = 'proto.xcite.iot.devicemanagement.v1.EnvironmentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.displayName = 'proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.UUIDList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.devicemanagement.v1.UUIDList.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.UUIDList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.UUIDList.displayName = 'proto.xcite.iot.devicemanagement.v1.UUIDList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.ThingList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.devicemanagement.v1.ThingList.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.ThingList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.ThingList.displayName = 'proto.xcite.iot.devicemanagement.v1.ThingList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.Relation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.Relation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.Relation.displayName = 'proto.xcite.iot.devicemanagement.v1.Relation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.RelationList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.devicemanagement.v1.RelationList.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.RelationList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.RelationList.displayName = 'proto.xcite.iot.devicemanagement.v1.RelationList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.ListThingsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.ListThingsRequest.displayName = 'proto.xcite.iot.devicemanagement.v1.ListThingsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.devicemanagement.v1.ListThingsResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.ListThingsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.ListThingsResponse.displayName = 'proto.xcite.iot.devicemanagement.v1.ListThingsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.displayName = 'proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.devicemanagement.v1.ListRelationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.displayName = 'proto.xcite.iot.devicemanagement.v1.ListRelationsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.EnvironmentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.toObject = function(includeInstance, msg) {
  var obj = {
    environmentList: jspb.Message.toObjectList(msg.getEnvironmentList(),
    x$cite_io_protos_model_basic_pb.EnvironmentEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.EnvironmentResponse}
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.EnvironmentResponse;
  return proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.EnvironmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.EnvironmentResponse}
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.EnvironmentEntry;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.EnvironmentEntry.deserializeBinaryFromReader);
      msg.addEnvironment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.EnvironmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvironmentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.EnvironmentEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.EnvironmentEntry environment = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.EnvironmentEntry>}
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.prototype.getEnvironmentList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.EnvironmentEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.EnvironmentEntry, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.EnvironmentEntry>} value */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.prototype.setEnvironmentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.EnvironmentEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry}
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.prototype.addEnvironment = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.EnvironmentEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.devicemanagement.v1.EnvironmentResponse.prototype.clearEnvironmentList = function() {
  this.setEnvironmentList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.toObject = function(includeInstance, msg) {
  var obj = {
    particlesensorList: jspb.Message.toObjectList(msg.getParticlesensorList(),
    x$cite_io_protos_model_basic_pb.ParticleSensorEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse}
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse;
  return proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse}
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.ParticleSensorEntry;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.ParticleSensorEntry.deserializeBinaryFromReader);
      msg.addParticlesensor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParticlesensorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.ParticleSensorEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.ParticleSensorEntry particlesensor = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.ParticleSensorEntry>}
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.prototype.getParticlesensorList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.ParticleSensorEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.ParticleSensorEntry, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.ParticleSensorEntry>} value */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.prototype.setParticlesensorList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.ParticleSensorEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry}
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.prototype.addParticlesensor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.ParticleSensorEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.devicemanagement.v1.ParticleSensorResponse.prototype.clearParticlesensorList = function() {
  this.setParticlesensorList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.UUIDList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.UUIDList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.toObject = function(includeInstance, msg) {
  var obj = {
    thingIdListList: jspb.Message.toObjectList(msg.getThingIdListList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.UUIDList}
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.UUIDList;
  return proto.xcite.iot.devicemanagement.v1.UUIDList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.UUIDList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.UUIDList}
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addThingIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.UUIDList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.UUIDList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingIdListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID thing_id_list = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.prototype.getThingIdListList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.UUID>} value */
proto.xcite.iot.devicemanagement.v1.UUIDList.prototype.setThingIdListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.prototype.addThingIdList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.devicemanagement.v1.UUIDList.prototype.clearThingIdListList = function() {
  this.setThingIdListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.devicemanagement.v1.ThingList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.ThingList.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.ThingList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.ThingList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ThingList.toObject = function(includeInstance, msg) {
  var obj = {
    thingListList: jspb.Message.toObjectList(msg.getThingListList(),
    x$cite_io_protos_model_basic_pb.Thing.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.ThingList}
 */
proto.xcite.iot.devicemanagement.v1.ThingList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.ThingList;
  return proto.xcite.iot.devicemanagement.v1.ThingList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.ThingList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.ThingList}
 */
proto.xcite.iot.devicemanagement.v1.ThingList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.Thing;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.Thing.deserializeBinaryFromReader);
      msg.addThingList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.ThingList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.ThingList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.ThingList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ThingList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.Thing.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.Thing thing_list = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.Thing>}
 */
proto.xcite.iot.devicemanagement.v1.ThingList.prototype.getThingListList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.Thing>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.Thing, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.Thing>} value */
proto.xcite.iot.devicemanagement.v1.ThingList.prototype.setThingListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.Thing=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.Thing}
 */
proto.xcite.iot.devicemanagement.v1.ThingList.prototype.addThingList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.Thing, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.devicemanagement.v1.ThingList.prototype.clearThingListList = function() {
  this.setThingListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.Relation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.Relation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.Relation.toObject = function(includeInstance, msg) {
  var obj = {
    thingA: (f = msg.getThingA()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    typeA: jspb.Message.getFieldWithDefault(msg, 2, 0),
    thingB: (f = msg.getThingB()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    typeB: jspb.Message.getFieldWithDefault(msg, 4, 0),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.Relation}
 */
proto.xcite.iot.devicemanagement.v1.Relation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.Relation;
  return proto.xcite.iot.devicemanagement.v1.Relation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.Relation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.Relation}
 */
proto.xcite.iot.devicemanagement.v1.Relation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setThingA(value);
      break;
    case 2:
      var value = /** @type {!proto.xcite.iot.model.v1.Type} */ (reader.readEnum());
      msg.setTypeA(value);
      break;
    case 3:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setThingB(value);
      break;
    case 4:
      var value = /** @type {!proto.xcite.iot.model.v1.Type} */ (reader.readEnum());
      msg.setTypeB(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.Relation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.Relation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.Relation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingA();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTypeA();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getThingB();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTypeB();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID thing_a = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.getThingA = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.setThingA = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.clearThingA = function() {
  this.setThingA(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.hasThingA = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional xcite.iot.model.v1.Type type_a = 2;
 * @return {!proto.xcite.iot.model.v1.Type}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.getTypeA = function() {
  return /** @type {!proto.xcite.iot.model.v1.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.xcite.iot.model.v1.Type} value */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.setTypeA = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional xcite.iot.model.v1.UUID thing_b = 3;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.getThingB = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 3));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.setThingB = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.clearThingB = function() {
  this.setThingB(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.hasThingB = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional xcite.iot.model.v1.Type type_b = 4;
 * @return {!proto.xcite.iot.model.v1.Type}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.getTypeB = function() {
  return /** @type {!proto.xcite.iot.model.v1.Type} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.xcite.iot.model.v1.Type} value */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.setTypeB = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp created = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.devicemanagement.v1.Relation.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.devicemanagement.v1.RelationList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.RelationList.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.RelationList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.RelationList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.RelationList.toObject = function(includeInstance, msg) {
  var obj = {
    relationList: jspb.Message.toObjectList(msg.getRelationList(),
    proto.xcite.iot.devicemanagement.v1.Relation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.RelationList}
 */
proto.xcite.iot.devicemanagement.v1.RelationList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.RelationList;
  return proto.xcite.iot.devicemanagement.v1.RelationList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.RelationList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.RelationList}
 */
proto.xcite.iot.devicemanagement.v1.RelationList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.devicemanagement.v1.Relation;
      reader.readMessage(value,proto.xcite.iot.devicemanagement.v1.Relation.deserializeBinaryFromReader);
      msg.addRelation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.RelationList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.RelationList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.RelationList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.RelationList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.devicemanagement.v1.Relation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Relation relation = 1;
 * @return {!Array<!proto.xcite.iot.devicemanagement.v1.Relation>}
 */
proto.xcite.iot.devicemanagement.v1.RelationList.prototype.getRelationList = function() {
  return /** @type{!Array<!proto.xcite.iot.devicemanagement.v1.Relation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.devicemanagement.v1.Relation, 1));
};


/** @param {!Array<!proto.xcite.iot.devicemanagement.v1.Relation>} value */
proto.xcite.iot.devicemanagement.v1.RelationList.prototype.setRelationList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.devicemanagement.v1.Relation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.devicemanagement.v1.Relation}
 */
proto.xcite.iot.devicemanagement.v1.RelationList.prototype.addRelation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.devicemanagement.v1.Relation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.devicemanagement.v1.RelationList.prototype.clearRelationList = function() {
  this.setRelationList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.ListThingsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.ListThingsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    thing: (f = msg.getThing()) && x$cite_io_protos_model_basic_pb.Thing.toObject(includeInstance, f),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.ListThingsRequest}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.ListThingsRequest;
  return proto.xcite.iot.devicemanagement.v1.ListThingsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.ListThingsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.ListThingsRequest}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.Thing;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.Thing.deserializeBinaryFromReader);
      msg.setThing(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.ListThingsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.ListThingsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThing();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.Thing.serializeBinaryToWriter
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional xcite.iot.model.v1.Thing thing = 1;
 * @return {?proto.xcite.iot.model.v1.Thing}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.getThing = function() {
  return /** @type{?proto.xcite.iot.model.v1.Thing} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.Thing, 1));
};


/** @param {?proto.xcite.iot.model.v1.Thing|undefined} value */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.setThing = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.clearThing = function() {
  this.setThing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.hasThing = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.iot.devicemanagement.v1.ListThingsRequest.prototype.setPageToken = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.ListThingsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.ListThingsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.toObject = function(includeInstance, msg) {
  var obj = {
    thingListList: jspb.Message.toObjectList(msg.getThingListList(),
    x$cite_io_protos_model_basic_pb.Thing.toObject, includeInstance),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.ListThingsResponse}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.ListThingsResponse;
  return proto.xcite.iot.devicemanagement.v1.ListThingsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.ListThingsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.ListThingsResponse}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.Thing;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.Thing.deserializeBinaryFromReader);
      msg.addThingList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.ListThingsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.ListThingsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.Thing.serializeBinaryToWriter
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated xcite.iot.model.v1.Thing thing_list = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.Thing>}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.prototype.getThingListList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.Thing>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.Thing, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.Thing>} value */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.prototype.setThingListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.Thing=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.Thing}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.prototype.addThingList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.Thing, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.prototype.clearThingListList = function() {
  this.setThingListList([]);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.devicemanagement.v1.ListThingsResponse.prototype.setPageToken = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.toObject = function(includeInstance, msg) {
  var obj = {
    relation: (f = msg.getRelation()) && proto.xcite.iot.devicemanagement.v1.Relation.toObject(includeInstance, f),
    connected: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest}
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest;
  return proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest}
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.devicemanagement.v1.Relation;
      reader.readMessage(value,proto.xcite.iot.devicemanagement.v1.Relation.deserializeBinaryFromReader);
      msg.setRelation(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConnected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.devicemanagement.v1.Relation.serializeBinaryToWriter
    );
  }
  f = message.getConnected();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional Relation relation = 1;
 * @return {?proto.xcite.iot.devicemanagement.v1.Relation}
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.prototype.getRelation = function() {
  return /** @type{?proto.xcite.iot.devicemanagement.v1.Relation} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.devicemanagement.v1.Relation, 1));
};


/** @param {?proto.xcite.iot.devicemanagement.v1.Relation|undefined} value */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.prototype.setRelation = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.prototype.clearRelation = function() {
  this.setRelation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.prototype.hasRelation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool connected = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.prototype.getConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.xcite.iot.devicemanagement.v1.UpdateRelationRequest.prototype.setConnected = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.devicemanagement.v1.ListRelationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.toObject = function(includeInstance, msg) {
  var obj = {
    relationsList: jspb.Message.toObjectList(msg.getRelationsList(),
    proto.xcite.iot.devicemanagement.v1.Relation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.devicemanagement.v1.ListRelationsResponse}
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.devicemanagement.v1.ListRelationsResponse;
  return proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.devicemanagement.v1.ListRelationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.devicemanagement.v1.ListRelationsResponse}
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.devicemanagement.v1.Relation;
      reader.readMessage(value,proto.xcite.iot.devicemanagement.v1.Relation.deserializeBinaryFromReader);
      msg.addRelations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.devicemanagement.v1.ListRelationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.devicemanagement.v1.Relation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Relation relations = 1;
 * @return {!Array<!proto.xcite.iot.devicemanagement.v1.Relation>}
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.prototype.getRelationsList = function() {
  return /** @type{!Array<!proto.xcite.iot.devicemanagement.v1.Relation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.devicemanagement.v1.Relation, 1));
};


/** @param {!Array<!proto.xcite.iot.devicemanagement.v1.Relation>} value */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.prototype.setRelationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.devicemanagement.v1.Relation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.devicemanagement.v1.Relation}
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.prototype.addRelations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.devicemanagement.v1.Relation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.devicemanagement.v1.ListRelationsResponse.prototype.clearRelationsList = function() {
  this.setRelationsList([]);
};


goog.object.extend(exports, proto.xcite.iot.devicemanagement.v1);
