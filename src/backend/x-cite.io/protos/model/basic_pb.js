 /* eslint-disable */

// source: x-cite.io/protos/model/basic.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var googleapis_google_type_latlng_pb = require('../../../googleapis/google/type/latlng_pb.js');
goog.object.extend(proto, googleapis_google_type_latlng_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.xcite.iot.model.v1.CreateThingResponse', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.DeleteThingRequest', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.EnvironmentEntry', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.EnvironmentResponse', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.GetThingRequest', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.ParticleSensorEntry', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.ParticleSensorResponse', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.ReportSchema', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.ServerResponse', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.Thing', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.Thing.Broker', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.ThingRequest', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.ThingType', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.Type', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.UUID', null, global);
goog.exportSymbol('proto.xcite.iot.model.v1.success', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.success = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.success, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.success.displayName = 'proto.xcite.iot.model.v1.success';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.UUID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.UUID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.UUID.displayName = 'proto.xcite.iot.model.v1.UUID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.ThingType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.ThingType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.ThingType.displayName = 'proto.xcite.iot.model.v1.ThingType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.ThingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.ThingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.ThingRequest.displayName = 'proto.xcite.iot.model.v1.ThingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.GetThingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.GetThingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.GetThingRequest.displayName = 'proto.xcite.iot.model.v1.GetThingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.ParticleSensorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.model.v1.ParticleSensorResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.model.v1.ParticleSensorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.ParticleSensorResponse.displayName = 'proto.xcite.iot.model.v1.ParticleSensorResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.ServerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.ServerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.ServerResponse.displayName = 'proto.xcite.iot.model.v1.ServerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.CreateThingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.CreateThingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.CreateThingResponse.displayName = 'proto.xcite.iot.model.v1.CreateThingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.DeleteThingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.DeleteThingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.DeleteThingRequest.displayName = 'proto.xcite.iot.model.v1.DeleteThingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.Thing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.Thing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.Thing.displayName = 'proto.xcite.iot.model.v1.Thing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.EnvironmentEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.EnvironmentEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.EnvironmentEntry.displayName = 'proto.xcite.iot.model.v1.EnvironmentEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.EnvironmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.model.v1.EnvironmentResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.model.v1.EnvironmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.EnvironmentResponse.displayName = 'proto.xcite.iot.model.v1.EnvironmentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.model.v1.ParticleSensorEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.model.v1.ParticleSensorEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.model.v1.ParticleSensorEntry.displayName = 'proto.xcite.iot.model.v1.ParticleSensorEntry';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.success.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.success.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.success} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.success.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.success}
 */
proto.xcite.iot.model.v1.success.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.success;
  return proto.xcite.iot.model.v1.success.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.success} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.success}
 */
proto.xcite.iot.model.v1.success.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.success.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.success.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.success} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.success.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.xcite.iot.model.v1.success.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcite.iot.model.v1.success} returns this
 */
proto.xcite.iot.model.v1.success.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.UUID.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.UUID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.UUID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.UUID.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.UUID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.UUID;
  return proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.UUID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.UUID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.UUID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.xcite.iot.model.v1.UUID.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcite.iot.model.v1.UUID} returns this
 */
proto.xcite.iot.model.v1.UUID.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.ThingType.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.ThingType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.ThingType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ThingType.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    additionalInfo: (f = msg.getAdditionalInfo()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.ThingType}
 */
proto.xcite.iot.model.v1.ThingType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.ThingType;
  return proto.xcite.iot.model.v1.ThingType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.ThingType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.ThingType}
 */
proto.xcite.iot.model.v1.ThingType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.xcite.iot.model.v1.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setAdditionalInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.ThingType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.ThingType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.ThingType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ThingType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdditionalInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional Type type = 1;
 * @return {!proto.xcite.iot.model.v1.Type}
 */
proto.xcite.iot.model.v1.ThingType.prototype.getType = function() {
  return /** @type {!proto.xcite.iot.model.v1.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.xcite.iot.model.v1.Type} value
 * @return {!proto.xcite.iot.model.v1.ThingType} returns this
 */
proto.xcite.iot.model.v1.ThingType.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.xcite.iot.model.v1.ThingType.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcite.iot.model.v1.ThingType} returns this
 */
proto.xcite.iot.model.v1.ThingType.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Any additional_info = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.xcite.iot.model.v1.ThingType.prototype.getAdditionalInfo = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.xcite.iot.model.v1.ThingType} returns this
*/
proto.xcite.iot.model.v1.ThingType.prototype.setAdditionalInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.ThingType} returns this
 */
proto.xcite.iot.model.v1.ThingType.prototype.clearAdditionalInfo = function() {
  return this.setAdditionalInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.ThingType.prototype.hasAdditionalInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.ThingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.ThingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ThingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    thingId: (f = msg.getThingId()) && proto.xcite.iot.model.v1.UUID.toObject(includeInstance, f),
    timestampStart: (f = msg.getTimestampStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timestampEnd: (f = msg.getTimestampEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.ThingRequest}
 */
proto.xcite.iot.model.v1.ThingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.ThingRequest;
  return proto.xcite.iot.model.v1.ThingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.ThingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.ThingRequest}
 */
proto.xcite.iot.model.v1.ThingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.model.v1.UUID;
      reader.readMessage(value,proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader);
      msg.setThingId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampStart(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampEnd(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.ThingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.ThingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ThingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTimestampStart();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimestampEnd();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional UUID thing_id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.getThingId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.model.v1.UUID, 1));
};


/**
 * @param {?proto.xcite.iot.model.v1.UUID|undefined} value
 * @return {!proto.xcite.iot.model.v1.ThingRequest} returns this
*/
proto.xcite.iot.model.v1.ThingRequest.prototype.setThingId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.ThingRequest} returns this
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.clearThingId = function() {
  return this.setThingId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.hasThingId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp_start = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.getTimestampStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.model.v1.ThingRequest} returns this
*/
proto.xcite.iot.model.v1.ThingRequest.prototype.setTimestampStart = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.ThingRequest} returns this
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.clearTimestampStart = function() {
  return this.setTimestampStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.hasTimestampStart = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp_end = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.getTimestampEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.model.v1.ThingRequest} returns this
*/
proto.xcite.iot.model.v1.ThingRequest.prototype.setTimestampEnd = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.ThingRequest} returns this
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.clearTimestampEnd = function() {
  return this.setTimestampEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.hasTimestampEnd = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 page_size = 4;
 * @return {number}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ThingRequest} returns this
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 page_token = 5;
 * @return {number}
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.getPageToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ThingRequest} returns this
 */
proto.xcite.iot.model.v1.ThingRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.GetThingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.GetThingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.GetThingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.GetThingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    thingId: (f = msg.getThingId()) && proto.xcite.iot.model.v1.UUID.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.GetThingRequest}
 */
proto.xcite.iot.model.v1.GetThingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.GetThingRequest;
  return proto.xcite.iot.model.v1.GetThingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.GetThingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.GetThingRequest}
 */
proto.xcite.iot.model.v1.GetThingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.model.v1.UUID;
      reader.readMessage(value,proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader);
      msg.setThingId(value);
      break;
    case 2:
      var value = /** @type {!proto.xcite.iot.model.v1.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.GetThingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.GetThingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.GetThingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.GetThingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional UUID thing_id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.GetThingRequest.prototype.getThingId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.model.v1.UUID, 1));
};


/**
 * @param {?proto.xcite.iot.model.v1.UUID|undefined} value
 * @return {!proto.xcite.iot.model.v1.GetThingRequest} returns this
*/
proto.xcite.iot.model.v1.GetThingRequest.prototype.setThingId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.GetThingRequest} returns this
 */
proto.xcite.iot.model.v1.GetThingRequest.prototype.clearThingId = function() {
  return this.setThingId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.GetThingRequest.prototype.hasThingId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Type type = 2;
 * @return {!proto.xcite.iot.model.v1.Type}
 */
proto.xcite.iot.model.v1.GetThingRequest.prototype.getType = function() {
  return /** @type {!proto.xcite.iot.model.v1.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.xcite.iot.model.v1.Type} value
 * @return {!proto.xcite.iot.model.v1.GetThingRequest} returns this
 */
proto.xcite.iot.model.v1.GetThingRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.ParticleSensorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.ParticleSensorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    particlesensorList: jspb.Message.toObjectList(msg.getParticlesensorList(),
    proto.xcite.iot.model.v1.ParticleSensorEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.ParticleSensorResponse}
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.ParticleSensorResponse;
  return proto.xcite.iot.model.v1.ParticleSensorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.ParticleSensorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.ParticleSensorResponse}
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.model.v1.ParticleSensorEntry;
      reader.readMessage(value,proto.xcite.iot.model.v1.ParticleSensorEntry.deserializeBinaryFromReader);
      msg.addParticlesensor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.ParticleSensorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.ParticleSensorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParticlesensorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.model.v1.ParticleSensorEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ParticleSensorEntry particlesensor = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.ParticleSensorEntry>}
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.prototype.getParticlesensorList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.ParticleSensorEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.model.v1.ParticleSensorEntry, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.model.v1.ParticleSensorEntry>} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorResponse} returns this
*/
proto.xcite.iot.model.v1.ParticleSensorResponse.prototype.setParticlesensorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.ParticleSensorEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry}
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.prototype.addParticlesensor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.ParticleSensorEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.model.v1.ParticleSensorResponse} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorResponse.prototype.clearParticlesensorList = function() {
  return this.setParticlesensorList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.ServerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.ServerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.ServerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ServerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.ServerResponse}
 */
proto.xcite.iot.model.v1.ServerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.ServerResponse;
  return proto.xcite.iot.model.v1.ServerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.ServerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.ServerResponse}
 */
proto.xcite.iot.model.v1.ServerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.ServerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.ServerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.ServerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ServerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.xcite.iot.model.v1.ServerResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcite.iot.model.v1.ServerResponse} returns this
 */
proto.xcite.iot.model.v1.ServerResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.CreateThingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.CreateThingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.CreateThingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.CreateThingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    uuid: (f = msg.getUuid()) && proto.xcite.iot.model.v1.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.CreateThingResponse}
 */
proto.xcite.iot.model.v1.CreateThingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.CreateThingResponse;
  return proto.xcite.iot.model.v1.CreateThingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.CreateThingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.CreateThingResponse}
 */
proto.xcite.iot.model.v1.CreateThingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.xcite.iot.model.v1.UUID;
      reader.readMessage(value,proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.CreateThingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.CreateThingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.CreateThingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.CreateThingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.xcite.iot.model.v1.CreateThingResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcite.iot.model.v1.CreateThingResponse} returns this
 */
proto.xcite.iot.model.v1.CreateThingResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional UUID uuid = 2;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.CreateThingResponse.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.model.v1.UUID, 2));
};


/**
 * @param {?proto.xcite.iot.model.v1.UUID|undefined} value
 * @return {!proto.xcite.iot.model.v1.CreateThingResponse} returns this
*/
proto.xcite.iot.model.v1.CreateThingResponse.prototype.setUuid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.CreateThingResponse} returns this
 */
proto.xcite.iot.model.v1.CreateThingResponse.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.CreateThingResponse.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.DeleteThingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.DeleteThingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.DeleteThingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.DeleteThingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.xcite.iot.model.v1.UUID.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.DeleteThingRequest}
 */
proto.xcite.iot.model.v1.DeleteThingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.DeleteThingRequest;
  return proto.xcite.iot.model.v1.DeleteThingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.DeleteThingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.DeleteThingRequest}
 */
proto.xcite.iot.model.v1.DeleteThingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.model.v1.UUID;
      reader.readMessage(value,proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.xcite.iot.model.v1.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.DeleteThingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.DeleteThingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.DeleteThingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.DeleteThingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional UUID id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.DeleteThingRequest.prototype.getId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.model.v1.UUID, 1));
};


/**
 * @param {?proto.xcite.iot.model.v1.UUID|undefined} value
 * @return {!proto.xcite.iot.model.v1.DeleteThingRequest} returns this
*/
proto.xcite.iot.model.v1.DeleteThingRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.DeleteThingRequest} returns this
 */
proto.xcite.iot.model.v1.DeleteThingRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.DeleteThingRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Type type = 2;
 * @return {!proto.xcite.iot.model.v1.Type}
 */
proto.xcite.iot.model.v1.DeleteThingRequest.prototype.getType = function() {
  return /** @type {!proto.xcite.iot.model.v1.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.xcite.iot.model.v1.Type} value
 * @return {!proto.xcite.iot.model.v1.DeleteThingRequest} returns this
 */
proto.xcite.iot.model.v1.DeleteThingRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.Thing.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.Thing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.Thing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.Thing.toObject = function(includeInstance, msg) {
  var f, obj = {
    thingId: (f = msg.getThingId()) && proto.xcite.iot.model.v1.UUID.toObject(includeInstance, f),
    type: (f = msg.getType()) && proto.xcite.iot.model.v1.ThingType.toObject(includeInstance, f),
    friendlyName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    broker: jspb.Message.getFieldWithDefault(msg, 4, 0),
    location: (f = msg.getLocation()) && googleapis_google_type_latlng_pb.LatLng.toObject(includeInstance, f),
    isSmart: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    owner: (f = msg.getOwner()) && proto.xcite.iot.model.v1.UUID.toObject(includeInstance, f),
    lastModified: (f = msg.getLastModified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.Thing}
 */
proto.xcite.iot.model.v1.Thing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.Thing;
  return proto.xcite.iot.model.v1.Thing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.Thing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.Thing}
 */
proto.xcite.iot.model.v1.Thing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.model.v1.UUID;
      reader.readMessage(value,proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader);
      msg.setThingId(value);
      break;
    case 2:
      var value = new proto.xcite.iot.model.v1.ThingType;
      reader.readMessage(value,proto.xcite.iot.model.v1.ThingType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFriendlyName(value);
      break;
    case 4:
      var value = /** @type {!proto.xcite.iot.model.v1.Thing.Broker} */ (reader.readEnum());
      msg.setBroker(value);
      break;
    case 5:
      var value = new googleapis_google_type_latlng_pb.LatLng;
      reader.readMessage(value,googleapis_google_type_latlng_pb.LatLng.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSmart(value);
      break;
    case 7:
      var value = new proto.xcite.iot.model.v1.UUID;
      reader.readMessage(value,proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastModified(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.Thing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.Thing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.Thing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.Thing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.xcite.iot.model.v1.ThingType.serializeBinaryToWriter
    );
  }
  f = message.getFriendlyName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBroker();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      googleapis_google_type_latlng_pb.LatLng.serializeBinaryToWriter
    );
  }
  f = message.getIsSmart();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter
    );
  }
  f = message.getLastModified();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.xcite.iot.model.v1.Thing.Broker = {
  BROKER_NULL: 0,
  GOOGLE: 1,
  ALICLOUD: 2,
  AZURE: 3,
  RAWUDP: 4,
  RAWTCP: 5,
  AWS: 6
};

/**
 * optional UUID thing_id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.Thing.prototype.getThingId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.model.v1.UUID, 1));
};


/**
 * @param {?proto.xcite.iot.model.v1.UUID|undefined} value
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
*/
proto.xcite.iot.model.v1.Thing.prototype.setThingId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
 */
proto.xcite.iot.model.v1.Thing.prototype.clearThingId = function() {
  return this.setThingId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.Thing.prototype.hasThingId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ThingType type = 2;
 * @return {?proto.xcite.iot.model.v1.ThingType}
 */
proto.xcite.iot.model.v1.Thing.prototype.getType = function() {
  return /** @type{?proto.xcite.iot.model.v1.ThingType} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.model.v1.ThingType, 2));
};


/**
 * @param {?proto.xcite.iot.model.v1.ThingType|undefined} value
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
*/
proto.xcite.iot.model.v1.Thing.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
 */
proto.xcite.iot.model.v1.Thing.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.Thing.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string friendly_name = 3;
 * @return {string}
 */
proto.xcite.iot.model.v1.Thing.prototype.getFriendlyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
 */
proto.xcite.iot.model.v1.Thing.prototype.setFriendlyName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Broker broker = 4;
 * @return {!proto.xcite.iot.model.v1.Thing.Broker}
 */
proto.xcite.iot.model.v1.Thing.prototype.getBroker = function() {
  return /** @type {!proto.xcite.iot.model.v1.Thing.Broker} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.xcite.iot.model.v1.Thing.Broker} value
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
 */
proto.xcite.iot.model.v1.Thing.prototype.setBroker = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional google.type.LatLng location = 5;
 * @return {?proto.google.type.LatLng}
 */
proto.xcite.iot.model.v1.Thing.prototype.getLocation = function() {
  return /** @type{?proto.google.type.LatLng} */ (
    jspb.Message.getWrapperField(this, googleapis_google_type_latlng_pb.LatLng, 5));
};


/**
 * @param {?proto.google.type.LatLng|undefined} value
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
*/
proto.xcite.iot.model.v1.Thing.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
 */
proto.xcite.iot.model.v1.Thing.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.Thing.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool is_smart = 6;
 * @return {boolean}
 */
proto.xcite.iot.model.v1.Thing.prototype.getIsSmart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
 */
proto.xcite.iot.model.v1.Thing.prototype.setIsSmart = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional UUID owner = 7;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.Thing.prototype.getOwner = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.model.v1.UUID, 7));
};


/**
 * @param {?proto.xcite.iot.model.v1.UUID|undefined} value
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
*/
proto.xcite.iot.model.v1.Thing.prototype.setOwner = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
 */
proto.xcite.iot.model.v1.Thing.prototype.clearOwner = function() {
  return this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.Thing.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp last_modified = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.model.v1.Thing.prototype.getLastModified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
*/
proto.xcite.iot.model.v1.Thing.prototype.setLastModified = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
 */
proto.xcite.iot.model.v1.Thing.prototype.clearLastModified = function() {
  return this.setLastModified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.Thing.prototype.hasLastModified = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp created = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.model.v1.Thing.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
*/
proto.xcite.iot.model.v1.Thing.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.Thing} returns this
 */
proto.xcite.iot.model.v1.Thing.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.Thing.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.EnvironmentEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.EnvironmentEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.EnvironmentEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    thingId: (f = msg.getThingId()) && proto.xcite.iot.model.v1.UUID.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    temperature: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    humidity: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    pressure: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    gas: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.EnvironmentEntry;
  return proto.xcite.iot.model.v1.EnvironmentEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.EnvironmentEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.model.v1.UUID;
      reader.readMessage(value,proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader);
      msg.setThingId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTemperature(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHumidity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPressure(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.EnvironmentEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.EnvironmentEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.EnvironmentEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTemperature();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getHumidity();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getPressure();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getGas();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
};


/**
 * optional UUID thing_id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.getThingId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.model.v1.UUID, 1));
};


/**
 * @param {?proto.xcite.iot.model.v1.UUID|undefined} value
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry} returns this
*/
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.setThingId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry} returns this
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.clearThingId = function() {
  return this.setThingId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.hasThingId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry} returns this
*/
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry} returns this
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float temperature = 3;
 * @return {number}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.getTemperature = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry} returns this
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.setTemperature = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float humidity = 4;
 * @return {number}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.getHumidity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry} returns this
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.setHumidity = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float pressure = 5;
 * @return {number}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.getPressure = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry} returns this
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.setPressure = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float gas = 6;
 * @return {number}
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.getGas = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry} returns this
 */
proto.xcite.iot.model.v1.EnvironmentEntry.prototype.setGas = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.model.v1.EnvironmentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.EnvironmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.EnvironmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.EnvironmentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.EnvironmentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    environmentList: jspb.Message.toObjectList(msg.getEnvironmentList(),
    proto.xcite.iot.model.v1.EnvironmentEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.EnvironmentResponse}
 */
proto.xcite.iot.model.v1.EnvironmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.EnvironmentResponse;
  return proto.xcite.iot.model.v1.EnvironmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.EnvironmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.EnvironmentResponse}
 */
proto.xcite.iot.model.v1.EnvironmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.model.v1.EnvironmentEntry;
      reader.readMessage(value,proto.xcite.iot.model.v1.EnvironmentEntry.deserializeBinaryFromReader);
      msg.addEnvironment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.EnvironmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.EnvironmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.EnvironmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.EnvironmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvironmentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.model.v1.EnvironmentEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EnvironmentEntry environment = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.EnvironmentEntry>}
 */
proto.xcite.iot.model.v1.EnvironmentResponse.prototype.getEnvironmentList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.EnvironmentEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.model.v1.EnvironmentEntry, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.model.v1.EnvironmentEntry>} value
 * @return {!proto.xcite.iot.model.v1.EnvironmentResponse} returns this
*/
proto.xcite.iot.model.v1.EnvironmentResponse.prototype.setEnvironmentList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.EnvironmentEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.EnvironmentEntry}
 */
proto.xcite.iot.model.v1.EnvironmentResponse.prototype.addEnvironment = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.EnvironmentEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.model.v1.EnvironmentResponse} returns this
 */
proto.xcite.iot.model.v1.EnvironmentResponse.prototype.clearEnvironmentList = function() {
  return this.setEnvironmentList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.model.v1.ParticleSensorEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.model.v1.ParticleSensorEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    thingId: (f = msg.getThingId()) && proto.xcite.iot.model.v1.UUID.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    mc1p0: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    mc2p5: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    mc4p0: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    mc10p0: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    nc0p5: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    nc1p0: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    nc2p5: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    nc4p0: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    nc10p0: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    typicalparticlesize: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.model.v1.ParticleSensorEntry;
  return proto.xcite.iot.model.v1.ParticleSensorEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.model.v1.ParticleSensorEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.model.v1.UUID;
      reader.readMessage(value,proto.xcite.iot.model.v1.UUID.deserializeBinaryFromReader);
      msg.setThingId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMc1p0(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMc2p5(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMc4p0(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMc10p0(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNc0p5(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNc1p0(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNc2p5(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNc4p0(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNc10p0(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTypicalparticlesize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.model.v1.ParticleSensorEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.model.v1.ParticleSensorEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.model.v1.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMc1p0();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getMc2p5();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getMc4p0();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getMc10p0();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getNc0p5();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getNc1p0();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getNc2p5();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getNc4p0();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getNc10p0();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getTypicalparticlesize();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
};


/**
 * optional UUID thing_id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getThingId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.model.v1.UUID, 1));
};


/**
 * @param {?proto.xcite.iot.model.v1.UUID|undefined} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
*/
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setThingId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.clearThingId = function() {
  return this.setThingId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.hasThingId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
*/
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float mc_1p0 = 3;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getMc1p0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setMc1p0 = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float mc_2p5 = 4;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getMc2p5 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setMc2p5 = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float mc_4p0 = 5;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getMc4p0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setMc4p0 = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float mc_10p0 = 6;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getMc10p0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setMc10p0 = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float nc_0p5 = 7;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getNc0p5 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setNc0p5 = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float nc_1p0 = 8;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getNc1p0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setNc1p0 = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float nc_2p5 = 9;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getNc2p5 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setNc2p5 = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float nc_4p0 = 10;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getNc4p0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setNc4p0 = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float nc_10p0 = 11;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getNc10p0 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setNc10p0 = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float typicalparticlesize = 12;
 * @return {number}
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.getTypicalparticlesize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.model.v1.ParticleSensorEntry} returns this
 */
proto.xcite.iot.model.v1.ParticleSensorEntry.prototype.setTypicalparticlesize = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * @enum {number}
 */
proto.xcite.iot.model.v1.Type = {
  THING_TYPE_NULL: 0,
  TRACKER: 1,
  VEHICLE: 2,
  PERSON: 3,
  SIM_CARD: 4,
  PARKING_SENSOR: 5
};

/**
 * @enum {number}
 */
proto.xcite.iot.model.v1.ReportSchema = {
  SCHEMA_UNSPECIFIED: 0,
  ENVIRONMENT_REPORT: 1,
  MCF88_REPORT: 2,
  GASRESISTANCE_REPORT: 3
};

goog.object.extend(exports, proto.xcite.iot.model.v1);
