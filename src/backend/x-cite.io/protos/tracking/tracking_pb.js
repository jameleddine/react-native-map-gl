 /* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var x$cite_io_protos_model_basic_pb = require('../../../x-cite.io/protos/model/basic_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_basic_pb);
var x$cite_io_protos_model_tracking_pb = require('../../../x-cite.io/protos/model/tracking_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_tracking_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.xcite.iot.tracking.v1.ListLatestReportsResponse', null, global);
goog.exportSymbol('proto.xcite.iot.tracking.v1.ListReportsRequest', null, global);
goog.exportSymbol('proto.xcite.iot.tracking.v1.ListReportsResponse', null, global);
goog.exportSymbol('proto.xcite.iot.tracking.v1.TrackerList', null, global);
goog.exportSymbol('proto.xcite.iot.tracking.v1.TrackerListByTimestamp', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.tracking.v1.TrackerListByTimestamp.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.tracking.v1.TrackerListByTimestamp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.tracking.v1.TrackerListByTimestamp.displayName = 'proto.xcite.iot.tracking.v1.TrackerListByTimestamp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.tracking.v1.TrackerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.tracking.v1.TrackerList.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.tracking.v1.TrackerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.tracking.v1.TrackerList.displayName = 'proto.xcite.iot.tracking.v1.TrackerList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.tracking.v1.ListReportsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.tracking.v1.ListReportsRequest.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.tracking.v1.ListReportsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.tracking.v1.ListReportsRequest.displayName = 'proto.xcite.iot.tracking.v1.ListReportsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.tracking.v1.ListReportsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.tracking.v1.ListReportsResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.tracking.v1.ListReportsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.tracking.v1.ListReportsResponse.displayName = 'proto.xcite.iot.tracking.v1.ListReportsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.tracking.v1.ListLatestReportsResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.tracking.v1.ListLatestReportsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.tracking.v1.ListLatestReportsResponse.displayName = 'proto.xcite.iot.tracking.v1.ListLatestReportsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.tracking.v1.TrackerListByTimestamp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.tracking.v1.TrackerListByTimestamp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.toObject = function(includeInstance, msg) {
  var obj = {
    thingIdList: jspb.Message.toObjectList(msg.getThingIdList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance),
    timestampStart: (f = msg.getTimestampStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timestampEnd: (f = msg.getTimestampEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.tracking.v1.TrackerListByTimestamp}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.tracking.v1.TrackerListByTimestamp;
  return proto.xcite.iot.tracking.v1.TrackerListByTimestamp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.tracking.v1.TrackerListByTimestamp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.tracking.v1.TrackerListByTimestamp}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addThingId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampStart(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.tracking.v1.TrackerListByTimestamp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.tracking.v1.TrackerListByTimestamp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTimestampStart();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimestampEnd();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID thing_id = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.getThingIdList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.UUID>} value */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.setThingIdList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.addThingId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.clearThingIdList = function() {
  this.setThingIdList([]);
};


/**
 * optional google.protobuf.Timestamp timestamp_start = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.getTimestampStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.setTimestampStart = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.clearTimestampStart = function() {
  this.setTimestampStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.hasTimestampStart = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp_end = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.getTimestampEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.setTimestampEnd = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.clearTimestampEnd = function() {
  this.setTimestampEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.tracking.v1.TrackerListByTimestamp.prototype.hasTimestampEnd = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.tracking.v1.TrackerList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.tracking.v1.TrackerList.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.tracking.v1.TrackerList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.tracking.v1.TrackerList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.TrackerList.toObject = function(includeInstance, msg) {
  var obj = {
    trackerList: jspb.Message.toObjectList(msg.getTrackerList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.tracking.v1.TrackerList}
 */
proto.xcite.iot.tracking.v1.TrackerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.tracking.v1.TrackerList;
  return proto.xcite.iot.tracking.v1.TrackerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.tracking.v1.TrackerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.tracking.v1.TrackerList}
 */
proto.xcite.iot.tracking.v1.TrackerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addTracker(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.tracking.v1.TrackerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.tracking.v1.TrackerList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.tracking.v1.TrackerList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.TrackerList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrackerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID tracker = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.tracking.v1.TrackerList.prototype.getTrackerList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.UUID>} value */
proto.xcite.iot.tracking.v1.TrackerList.prototype.setTrackerList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.tracking.v1.TrackerList.prototype.addTracker = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.tracking.v1.TrackerList.prototype.clearTrackerList = function() {
  this.setTrackerList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.tracking.v1.ListReportsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.tracking.v1.ListReportsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    thingIdList: jspb.Message.toObjectList(msg.getThingIdList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance),
    timestampStart: (f = msg.getTimestampStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timestampEnd: (f = msg.getTimestampEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.tracking.v1.ListReportsRequest}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.tracking.v1.ListReportsRequest;
  return proto.xcite.iot.tracking.v1.ListReportsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.tracking.v1.ListReportsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.tracking.v1.ListReportsRequest}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addThingId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampStart(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampEnd(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.tracking.v1.ListReportsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.tracking.v1.ListReportsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTimestampStart();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimestampEnd();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID thing_id = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.getThingIdList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.UUID>} value */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.setThingIdList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.addThingId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.clearThingIdList = function() {
  this.setThingIdList([]);
};


/**
 * optional google.protobuf.Timestamp timestamp_start = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.getTimestampStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.setTimestampStart = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.clearTimestampStart = function() {
  this.setTimestampStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.hasTimestampStart = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp_end = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.getTimestampEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.setTimestampEnd = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.clearTimestampEnd = function() {
  this.setTimestampEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.hasTimestampEnd = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.xcite.iot.tracking.v1.ListReportsRequest.prototype.setPageToken = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.tracking.v1.ListReportsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.tracking.v1.ListReportsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.toObject = function(includeInstance, msg) {
  var obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, false),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reportsList: jspb.Message.toObjectList(msg.getReportsList(),
    x$cite_io_protos_model_tracking_pb.TrackerReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.tracking.v1.ListReportsResponse}
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.tracking.v1.ListReportsResponse;
  return proto.xcite.iot.tracking.v1.ListReportsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.tracking.v1.ListReportsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.tracking.v1.ListReportsResponse}
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = new x$cite_io_protos_model_tracking_pb.TrackerReport;
      reader.readMessage(value,x$cite_io_protos_model_tracking_pb.TrackerReport.deserializeBinaryFromReader);
      msg.addReports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.tracking.v1.ListReportsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.tracking.v1.ListReportsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      x$cite_io_protos_model_tracking_pb.TrackerReport.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.setPageToken = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated xcite.iot.model.v1.TrackerReport reports = 3;
 * @return {!Array<!proto.xcite.iot.model.v1.TrackerReport>}
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.getReportsList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.TrackerReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_tracking_pb.TrackerReport, 3));
};


/** @param {!Array<!proto.xcite.iot.model.v1.TrackerReport>} value */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.setReportsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.TrackerReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.TrackerReport}
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.addReports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.xcite.iot.model.v1.TrackerReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.tracking.v1.ListReportsResponse.prototype.clearReportsList = function() {
  this.setReportsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.tracking.v1.ListLatestReportsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.tracking.v1.ListLatestReportsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.toObject = function(includeInstance, msg) {
  var obj = {
    reportsList: jspb.Message.toObjectList(msg.getReportsList(),
    x$cite_io_protos_model_tracking_pb.TrackerReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.tracking.v1.ListLatestReportsResponse}
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.tracking.v1.ListLatestReportsResponse;
  return proto.xcite.iot.tracking.v1.ListLatestReportsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.tracking.v1.ListLatestReportsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.tracking.v1.ListLatestReportsResponse}
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_tracking_pb.TrackerReport;
      reader.readMessage(value,x$cite_io_protos_model_tracking_pb.TrackerReport.deserializeBinaryFromReader);
      msg.addReports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.tracking.v1.ListLatestReportsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.tracking.v1.ListLatestReportsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_tracking_pb.TrackerReport.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.TrackerReport reports = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.TrackerReport>}
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.prototype.getReportsList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.TrackerReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_tracking_pb.TrackerReport, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.TrackerReport>} value */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.prototype.setReportsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.TrackerReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.TrackerReport}
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.prototype.addReports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.TrackerReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.tracking.v1.ListLatestReportsResponse.prototype.clearReportsList = function() {
  this.setReportsList([]);
};


goog.object.extend(exports, proto.xcite.iot.tracking.v1);
