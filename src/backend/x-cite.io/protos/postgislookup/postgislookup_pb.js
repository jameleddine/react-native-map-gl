 /* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var x$cite_io_protos_model_basic_pb = require('../../../x-cite.io/protos/model/basic_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_basic_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var googleapis_google_type_latlng_pb = require('../../../googleapis/google/type/latlng_pb.js');
goog.object.extend(proto, googleapis_google_type_latlng_pb);
goog.exportSymbol('proto.xcite.iot.postgislookup.v1.Alert', null, global);
goog.exportSymbol('proto.xcite.iot.postgislookup.v1.Alert.TypeProblem', null, global);
goog.exportSymbol('proto.xcite.iot.postgislookup.v1.Distance', null, global);
goog.exportSymbol('proto.xcite.iot.postgislookup.v1.DistanceRequest', null, global);
goog.exportSymbol('proto.xcite.iot.postgislookup.v1.DistanceResponse', null, global);
goog.exportSymbol('proto.xcite.iot.postgislookup.v1.Object', null, global);
goog.exportSymbol('proto.xcite.iot.postgislookup.v1.Point', null, global);
goog.exportSymbol('proto.xcite.iot.postgislookup.v1.Shape', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.postgislookup.v1.Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.postgislookup.v1.Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.postgislookup.v1.Point.displayName = 'proto.xcite.iot.postgislookup.v1.Point';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.postgislookup.v1.Object = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.postgislookup.v1.Object.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.postgislookup.v1.Object, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.postgislookup.v1.Object.displayName = 'proto.xcite.iot.postgislookup.v1.Object';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.postgislookup.v1.Distance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.postgislookup.v1.Distance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.postgislookup.v1.Distance.displayName = 'proto.xcite.iot.postgislookup.v1.Distance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.postgislookup.v1.DistanceRequest.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.postgislookup.v1.DistanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.postgislookup.v1.DistanceRequest.displayName = 'proto.xcite.iot.postgislookup.v1.DistanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.postgislookup.v1.DistanceResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.postgislookup.v1.DistanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.postgislookup.v1.DistanceResponse.displayName = 'proto.xcite.iot.postgislookup.v1.DistanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.postgislookup.v1.Alert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.postgislookup.v1.Alert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.postgislookup.v1.Alert.displayName = 'proto.xcite.iot.postgislookup.v1.Alert';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.postgislookup.v1.Point.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.postgislookup.v1.Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.postgislookup.v1.Point} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.Point.toObject = function(includeInstance, msg) {
  var obj = {
    latitudeLongitude: (f = msg.getLatitudeLongitude()) && googleapis_google_type_latlng_pb.LatLng.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.postgislookup.v1.Point}
 */
proto.xcite.iot.postgislookup.v1.Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.postgislookup.v1.Point;
  return proto.xcite.iot.postgislookup.v1.Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.postgislookup.v1.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.postgislookup.v1.Point}
 */
proto.xcite.iot.postgislookup.v1.Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new googleapis_google_type_latlng_pb.LatLng;
      reader.readMessage(value,googleapis_google_type_latlng_pb.LatLng.deserializeBinaryFromReader);
      msg.setLatitudeLongitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.postgislookup.v1.Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.postgislookup.v1.Point.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.postgislookup.v1.Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.Point.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitudeLongitude();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      googleapis_google_type_latlng_pb.LatLng.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.type.LatLng latitude_longitude = 1;
 * @return {?proto.google.type.LatLng}
 */
proto.xcite.iot.postgislookup.v1.Point.prototype.getLatitudeLongitude = function() {
  return /** @type{?proto.google.type.LatLng} */ (
    jspb.Message.getWrapperField(this, googleapis_google_type_latlng_pb.LatLng, 1));
};


/** @param {?proto.google.type.LatLng|undefined} value */
proto.xcite.iot.postgislookup.v1.Point.prototype.setLatitudeLongitude = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.postgislookup.v1.Point.prototype.clearLatitudeLongitude = function() {
  this.setLatitudeLongitude(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.postgislookup.v1.Point.prototype.hasLatitudeLongitude = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.postgislookup.v1.Object.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.postgislookup.v1.Object.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.postgislookup.v1.Object} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.Object.toObject = function(includeInstance, msg) {
  var obj = {
    objectId: (f = msg.getObjectId()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    objectName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shape: jspb.Message.getFieldWithDefault(msg, 3, 0),
    coordinatesList: jspb.Message.toObjectList(msg.getCoordinatesList(),
    proto.xcite.iot.postgislookup.v1.Point.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.postgislookup.v1.Object}
 */
proto.xcite.iot.postgislookup.v1.Object.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.postgislookup.v1.Object;
  return proto.xcite.iot.postgislookup.v1.Object.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.postgislookup.v1.Object} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.postgislookup.v1.Object}
 */
proto.xcite.iot.postgislookup.v1.Object.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setObjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectName(value);
      break;
    case 3:
      var value = /** @type {!proto.xcite.iot.postgislookup.v1.Shape} */ (reader.readEnum());
      msg.setShape(value);
      break;
    case 4:
      var value = new proto.xcite.iot.postgislookup.v1.Point;
      reader.readMessage(value,proto.xcite.iot.postgislookup.v1.Point.deserializeBinaryFromReader);
      msg.addCoordinates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.postgislookup.v1.Object.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.postgislookup.v1.Object} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.Object.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getObjectName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShape();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCoordinatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.xcite.iot.postgislookup.v1.Point.serializeBinaryToWriter
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID object_id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.getObjectId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.postgislookup.v1.Object.prototype.setObjectId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.clearObjectId = function() {
  this.setObjectId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.hasObjectId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string object_name = 2;
 * @return {string}
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.getObjectName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.postgislookup.v1.Object.prototype.setObjectName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Shape shape = 3;
 * @return {!proto.xcite.iot.postgislookup.v1.Shape}
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.getShape = function() {
  return /** @type {!proto.xcite.iot.postgislookup.v1.Shape} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.xcite.iot.postgislookup.v1.Shape} value */
proto.xcite.iot.postgislookup.v1.Object.prototype.setShape = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated Point coordinates = 4;
 * @return {!Array<!proto.xcite.iot.postgislookup.v1.Point>}
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.getCoordinatesList = function() {
  return /** @type{!Array<!proto.xcite.iot.postgislookup.v1.Point>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.postgislookup.v1.Point, 4));
};


/** @param {!Array<!proto.xcite.iot.postgislookup.v1.Point>} value */
proto.xcite.iot.postgislookup.v1.Object.prototype.setCoordinatesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.xcite.iot.postgislookup.v1.Point=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.postgislookup.v1.Point}
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.addCoordinates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.xcite.iot.postgislookup.v1.Point, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.postgislookup.v1.Object.prototype.clearCoordinatesList = function() {
  this.setCoordinatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.postgislookup.v1.Distance.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.postgislookup.v1.Distance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.postgislookup.v1.Distance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.Distance.toObject = function(includeInstance, msg) {
  var obj = {
    distance: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    unit: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.postgislookup.v1.Distance}
 */
proto.xcite.iot.postgislookup.v1.Distance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.postgislookup.v1.Distance;
  return proto.xcite.iot.postgislookup.v1.Distance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.postgislookup.v1.Distance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.postgislookup.v1.Distance}
 */
proto.xcite.iot.postgislookup.v1.Distance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.postgislookup.v1.Distance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.postgislookup.v1.Distance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.postgislookup.v1.Distance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.Distance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getUnit();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional float distance = 1;
 * @return {number}
 */
proto.xcite.iot.postgislookup.v1.Distance.prototype.getDistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.xcite.iot.postgislookup.v1.Distance.prototype.setDistance = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string unit = 2;
 * @return {string}
 */
proto.xcite.iot.postgislookup.v1.Distance.prototype.getUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.postgislookup.v1.Distance.prototype.setUnit = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.postgislookup.v1.DistanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.postgislookup.v1.DistanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.toObject = function(includeInstance, msg) {
  var obj = {
    trackerIdList: jspb.Message.toObjectList(msg.getTrackerIdList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance),
    objectId: (f = msg.getObjectId()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.postgislookup.v1.DistanceRequest}
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.postgislookup.v1.DistanceRequest;
  return proto.xcite.iot.postgislookup.v1.DistanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.postgislookup.v1.DistanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.postgislookup.v1.DistanceRequest}
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addTrackerId(value);
      break;
    case 2:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setObjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.postgislookup.v1.DistanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.postgislookup.v1.DistanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrackerIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getObjectId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID tracker_id = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.getTrackerIdList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.UUID>} value */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.setTrackerIdList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.addTrackerId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.clearTrackerIdList = function() {
  this.setTrackerIdList([]);
};


/**
 * optional xcite.iot.model.v1.UUID object_id = 2;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.getObjectId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 2));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.setObjectId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.clearObjectId = function() {
  this.setObjectId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.postgislookup.v1.DistanceRequest.prototype.hasObjectId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.postgislookup.v1.DistanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.postgislookup.v1.DistanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.toObject = function(includeInstance, msg) {
  var obj = {
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    distanceList: jspb.Message.toObjectList(msg.getDistanceList(),
    proto.xcite.iot.postgislookup.v1.Distance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.postgislookup.v1.DistanceResponse}
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.postgislookup.v1.DistanceResponse;
  return proto.xcite.iot.postgislookup.v1.DistanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.postgislookup.v1.DistanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.postgislookup.v1.DistanceResponse}
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = new proto.xcite.iot.postgislookup.v1.Distance;
      reader.readMessage(value,proto.xcite.iot.postgislookup.v1.Distance.deserializeBinaryFromReader);
      msg.addDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.postgislookup.v1.DistanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.postgislookup.v1.DistanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDistanceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.xcite.iot.postgislookup.v1.Distance.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Distance distance = 2;
 * @return {!Array<!proto.xcite.iot.postgislookup.v1.Distance>}
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.getDistanceList = function() {
  return /** @type{!Array<!proto.xcite.iot.postgislookup.v1.Distance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.postgislookup.v1.Distance, 2));
};


/** @param {!Array<!proto.xcite.iot.postgislookup.v1.Distance>} value */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.setDistanceList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.xcite.iot.postgislookup.v1.Distance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.postgislookup.v1.Distance}
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.addDistance = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.xcite.iot.postgislookup.v1.Distance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.postgislookup.v1.DistanceResponse.prototype.clearDistanceList = function() {
  this.setDistanceList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.postgislookup.v1.Alert.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.postgislookup.v1.Alert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.postgislookup.v1.Alert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.Alert.toObject = function(includeInstance, msg) {
  var obj = {
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    problem: jspb.Message.getFieldWithDefault(msg, 2, 0),
    alertMessage: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.postgislookup.v1.Alert}
 */
proto.xcite.iot.postgislookup.v1.Alert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.postgislookup.v1.Alert;
  return proto.xcite.iot.postgislookup.v1.Alert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.postgislookup.v1.Alert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.postgislookup.v1.Alert}
 */
proto.xcite.iot.postgislookup.v1.Alert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {!proto.xcite.iot.postgislookup.v1.Alert.TypeProblem} */ (reader.readEnum());
      msg.setProblem(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlertMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.postgislookup.v1.Alert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.postgislookup.v1.Alert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.postgislookup.v1.Alert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.postgislookup.v1.Alert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getProblem();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAlertMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.xcite.iot.postgislookup.v1.Alert.TypeProblem = {
  TOO_FAR: 0,
  TOO_CLOSE: 1
};

/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.postgislookup.v1.Alert.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.postgislookup.v1.Alert.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.postgislookup.v1.Alert.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.postgislookup.v1.Alert.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TypeProblem problem = 2;
 * @return {!proto.xcite.iot.postgislookup.v1.Alert.TypeProblem}
 */
proto.xcite.iot.postgislookup.v1.Alert.prototype.getProblem = function() {
  return /** @type {!proto.xcite.iot.postgislookup.v1.Alert.TypeProblem} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.xcite.iot.postgislookup.v1.Alert.TypeProblem} value */
proto.xcite.iot.postgislookup.v1.Alert.prototype.setProblem = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string alert_message = 3;
 * @return {string}
 */
proto.xcite.iot.postgislookup.v1.Alert.prototype.getAlertMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.iot.postgislookup.v1.Alert.prototype.setAlertMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.xcite.iot.postgislookup.v1.Shape = {
  POINT: 0,
  LINE: 1,
  POLYGON: 2
};

goog.object.extend(exports, proto.xcite.iot.postgislookup.v1);
