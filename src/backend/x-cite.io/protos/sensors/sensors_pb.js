 /* eslint-disable */
// source: x-cite.io/protos/sensors/sensors.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var x$cite_io_protos_model_basic_pb = require('../../../x-cite.io/protos/model/basic_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_basic_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.xcite.iot.sensors.v1.CreateReportRequest', null, global);
goog.exportSymbol('proto.xcite.iot.sensors.v1.CreateReportResponse', null, global);
goog.exportSymbol('proto.xcite.iot.sensors.v1.CreateReportResponsePair', null, global);
goog.exportSymbol('proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest', null, global);
goog.exportSymbol('proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse', null, global);
goog.exportSymbol('proto.xcite.iot.sensors.v1.ListLatestReportsRequest', null, global);
goog.exportSymbol('proto.xcite.iot.sensors.v1.ListLatestReportsResponse', null, global);
goog.exportSymbol('proto.xcite.iot.sensors.v1.ListReportsRequest', null, global);
goog.exportSymbol('proto.xcite.iot.sensors.v1.ListReportsResponse', null, global);
goog.exportSymbol('proto.xcite.iot.sensors.v1.SensorReport', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.sensors.v1.ListLatestReportsRequest.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.ListLatestReportsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.ListLatestReportsRequest.displayName = 'proto.xcite.iot.sensors.v1.ListLatestReportsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.sensors.v1.ListLatestReportsResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.ListLatestReportsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.ListLatestReportsResponse.displayName = 'proto.xcite.iot.sensors.v1.ListLatestReportsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.ListReportsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.sensors.v1.ListReportsRequest.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.ListReportsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.ListReportsRequest.displayName = 'proto.xcite.iot.sensors.v1.ListReportsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.ListReportsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.sensors.v1.ListReportsResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.ListReportsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.ListReportsResponse.displayName = 'proto.xcite.iot.sensors.v1.ListReportsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.SensorReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.SensorReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.SensorReport.displayName = 'proto.xcite.iot.sensors.v1.SensorReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.CreateReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.sensors.v1.CreateReportRequest.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.CreateReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.CreateReportRequest.displayName = 'proto.xcite.iot.sensors.v1.CreateReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.CreateReportResponsePair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.CreateReportResponsePair.displayName = 'proto.xcite.iot.sensors.v1.CreateReportResponsePair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.CreateReportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.sensors.v1.CreateReportResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.CreateReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.CreateReportResponse.displayName = 'proto.xcite.iot.sensors.v1.CreateReportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.displayName = 'proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.displayName = 'proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.ListLatestReportsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.ListLatestReportsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    thingIdList: jspb.Message.toObjectList(msg.getThingIdList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance),
    reportType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.ListLatestReportsRequest}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.ListLatestReportsRequest;
  return proto.xcite.iot.sensors.v1.ListLatestReportsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.ListLatestReportsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.ListLatestReportsRequest}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addThingId(value);
      break;
    case 2:
      var value = /** @type {!proto.xcite.iot.model.v1.ReportSchema} */ (reader.readEnum());
      msg.setReportType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.ListLatestReportsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.ListLatestReportsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getReportType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID thing_id = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.prototype.getThingIdList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.model.v1.UUID>} value
 * @return {!proto.xcite.iot.sensors.v1.ListLatestReportsRequest} returns this
*/
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.prototype.setThingIdList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.prototype.addThingId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.sensors.v1.ListLatestReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.prototype.clearThingIdList = function() {
  return this.setThingIdList([]);
};


/**
 * optional xcite.iot.model.v1.ReportSchema report_type = 2;
 * @return {!proto.xcite.iot.model.v1.ReportSchema}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.prototype.getReportType = function() {
  return /** @type {!proto.xcite.iot.model.v1.ReportSchema} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.xcite.iot.model.v1.ReportSchema} value
 * @return {!proto.xcite.iot.sensors.v1.ListLatestReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListLatestReportsRequest.prototype.setReportType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.ListLatestReportsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.ListLatestReportsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportsList: jspb.Message.toObjectList(msg.getReportsList(),
    proto.xcite.iot.sensors.v1.SensorReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.ListLatestReportsResponse}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.ListLatestReportsResponse;
  return proto.xcite.iot.sensors.v1.ListLatestReportsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.ListLatestReportsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.ListLatestReportsResponse}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.sensors.v1.SensorReport;
      reader.readMessage(value,proto.xcite.iot.sensors.v1.SensorReport.deserializeBinaryFromReader);
      msg.addReports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.ListLatestReportsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.ListLatestReportsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.sensors.v1.SensorReport.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SensorReport reports = 1;
 * @return {!Array<!proto.xcite.iot.sensors.v1.SensorReport>}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.prototype.getReportsList = function() {
  return /** @type{!Array<!proto.xcite.iot.sensors.v1.SensorReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.sensors.v1.SensorReport, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.sensors.v1.SensorReport>} value
 * @return {!proto.xcite.iot.sensors.v1.ListLatestReportsResponse} returns this
*/
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.prototype.setReportsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.sensors.v1.SensorReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.sensors.v1.SensorReport}
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.prototype.addReports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.sensors.v1.SensorReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.sensors.v1.ListLatestReportsResponse} returns this
 */
proto.xcite.iot.sensors.v1.ListLatestReportsResponse.prototype.clearReportsList = function() {
  return this.setReportsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.ListReportsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.ListReportsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    thingIdList: jspb.Message.toObjectList(msg.getThingIdList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance),
    reportTypesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    timestampStart: (f = msg.getTimestampStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timestampEnd: (f = msg.getTimestampEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.ListReportsRequest;
  return proto.xcite.iot.sensors.v1.ListReportsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.ListReportsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addThingId(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.xcite.iot.model.v1.ReportSchema>} */ (reader.readPackedEnum());
      msg.setReportTypesList(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampStart(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampEnd(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.ListReportsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.ListReportsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getReportTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getTimestampStart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimestampEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID thing_id = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.getThingIdList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.model.v1.UUID>} value
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
*/
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.setThingIdList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.addThingId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.clearThingIdList = function() {
  return this.setThingIdList([]);
};


/**
 * repeated xcite.iot.model.v1.ReportSchema report_types = 2;
 * @return {!Array<!proto.xcite.iot.model.v1.ReportSchema>}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.getReportTypesList = function() {
  return /** @type {!Array<!proto.xcite.iot.model.v1.ReportSchema>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.xcite.iot.model.v1.ReportSchema>} value
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.setReportTypesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.xcite.iot.model.v1.ReportSchema} value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.addReportTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.clearReportTypesList = function() {
  return this.setReportTypesList([]);
};


/**
 * optional google.protobuf.Timestamp timestamp_start = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.getTimestampStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
*/
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.setTimestampStart = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.clearTimestampStart = function() {
  return this.setTimestampStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.hasTimestampStart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp_end = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.getTimestampEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
*/
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.setTimestampEnd = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.clearTimestampEnd = function() {
  return this.setTimestampEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.hasTimestampEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 limit = 5;
 * @return {number}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 offset = 6;
 * @return {number}
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcite.iot.sensors.v1.ListReportsRequest} returns this
 */
proto.xcite.iot.sensors.v1.ListReportsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.ListReportsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.ListReportsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportsList: jspb.Message.toObjectList(msg.getReportsList(),
    proto.xcite.iot.sensors.v1.SensorReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.ListReportsResponse}
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.ListReportsResponse;
  return proto.xcite.iot.sensors.v1.ListReportsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.ListReportsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.ListReportsResponse}
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.sensors.v1.SensorReport;
      reader.readMessage(value,proto.xcite.iot.sensors.v1.SensorReport.deserializeBinaryFromReader);
      msg.addReports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.ListReportsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.ListReportsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.sensors.v1.SensorReport.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SensorReport reports = 1;
 * @return {!Array<!proto.xcite.iot.sensors.v1.SensorReport>}
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.prototype.getReportsList = function() {
  return /** @type{!Array<!proto.xcite.iot.sensors.v1.SensorReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.sensors.v1.SensorReport, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.sensors.v1.SensorReport>} value
 * @return {!proto.xcite.iot.sensors.v1.ListReportsResponse} returns this
*/
proto.xcite.iot.sensors.v1.ListReportsResponse.prototype.setReportsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.sensors.v1.SensorReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.sensors.v1.SensorReport}
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.prototype.addReports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.sensors.v1.SensorReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.sensors.v1.ListReportsResponse} returns this
 */
proto.xcite.iot.sensors.v1.ListReportsResponse.prototype.clearReportsList = function() {
  return this.setReportsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.SensorReport.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.SensorReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.SensorReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.SensorReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reportData: (f = msg.getReportData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.SensorReport}
 */
proto.xcite.iot.sensors.v1.SensorReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.SensorReport;
  return proto.xcite.iot.sensors.v1.SensorReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.SensorReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.SensorReport}
 */
proto.xcite.iot.sensors.v1.SensorReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.xcite.iot.model.v1.ReportSchema} */ (reader.readEnum());
      msg.setReportType(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setReportData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.SensorReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.SensorReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.SensorReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.SensorReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReportData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional xcite.iot.model.v1.ReportSchema report_type = 1;
 * @return {!proto.xcite.iot.model.v1.ReportSchema}
 */
proto.xcite.iot.sensors.v1.SensorReport.prototype.getReportType = function() {
  return /** @type {!proto.xcite.iot.model.v1.ReportSchema} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.xcite.iot.model.v1.ReportSchema} value
 * @return {!proto.xcite.iot.sensors.v1.SensorReport} returns this
 */
proto.xcite.iot.sensors.v1.SensorReport.prototype.setReportType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Any report_data = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.xcite.iot.sensors.v1.SensorReport.prototype.getReportData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.xcite.iot.sensors.v1.SensorReport} returns this
*/
proto.xcite.iot.sensors.v1.SensorReport.prototype.setReportData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.sensors.v1.SensorReport} returns this
 */
proto.xcite.iot.sensors.v1.SensorReport.prototype.clearReportData = function() {
  return this.setReportData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.sensors.v1.SensorReport.prototype.hasReportData = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.CreateReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.CreateReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportsList: jspb.Message.toObjectList(msg.getReportsList(),
    proto.xcite.iot.sensors.v1.SensorReport.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.CreateReportRequest}
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.CreateReportRequest;
  return proto.xcite.iot.sensors.v1.CreateReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.CreateReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.CreateReportRequest}
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.sensors.v1.SensorReport;
      reader.readMessage(value,proto.xcite.iot.sensors.v1.SensorReport.deserializeBinaryFromReader);
      msg.addReports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.CreateReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.CreateReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.sensors.v1.SensorReport.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SensorReport reports = 1;
 * @return {!Array<!proto.xcite.iot.sensors.v1.SensorReport>}
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.prototype.getReportsList = function() {
  return /** @type{!Array<!proto.xcite.iot.sensors.v1.SensorReport>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.sensors.v1.SensorReport, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.sensors.v1.SensorReport>} value
 * @return {!proto.xcite.iot.sensors.v1.CreateReportRequest} returns this
*/
proto.xcite.iot.sensors.v1.CreateReportRequest.prototype.setReportsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.sensors.v1.SensorReport=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.sensors.v1.SensorReport}
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.prototype.addReports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.sensors.v1.SensorReport, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.sensors.v1.CreateReportRequest} returns this
 */
proto.xcite.iot.sensors.v1.CreateReportRequest.prototype.clearReportsList = function() {
  return this.setReportsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.CreateReportResponsePair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.CreateReportResponsePair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportId: (f = msg.getReportId()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponsePair}
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.CreateReportResponsePair;
  return proto.xcite.iot.sensors.v1.CreateReportResponsePair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.CreateReportResponsePair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponsePair}
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setReportId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.CreateReportResponsePair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.CreateReportResponsePair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID report_id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.prototype.getReportId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/**
 * @param {?proto.xcite.iot.model.v1.UUID|undefined} value
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponsePair} returns this
*/
proto.xcite.iot.sensors.v1.CreateReportResponsePair.prototype.setReportId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponsePair} returns this
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.prototype.clearReportId = function() {
  return this.setReportId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.prototype.hasReportId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponsePair} returns this
 */
proto.xcite.iot.sensors.v1.CreateReportResponsePair.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.CreateReportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.CreateReportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto.xcite.iot.sensors.v1.CreateReportResponsePair.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponse}
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.CreateReportResponse;
  return proto.xcite.iot.sensors.v1.CreateReportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.CreateReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponse}
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.sensors.v1.CreateReportResponsePair;
      reader.readMessage(value,proto.xcite.iot.sensors.v1.CreateReportResponsePair.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.CreateReportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.CreateReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.sensors.v1.CreateReportResponsePair.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CreateReportResponsePair responses = 1;
 * @return {!Array<!proto.xcite.iot.sensors.v1.CreateReportResponsePair>}
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.xcite.iot.sensors.v1.CreateReportResponsePair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.sensors.v1.CreateReportResponsePair, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.sensors.v1.CreateReportResponsePair>} value
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponse} returns this
*/
proto.xcite.iot.sensors.v1.CreateReportResponse.prototype.setResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.sensors.v1.CreateReportResponsePair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponsePair}
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.sensors.v1.CreateReportResponsePair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.sensors.v1.CreateReportResponse} returns this
 */
proto.xcite.iot.sensors.v1.CreateReportResponse.prototype.clearResponsesList = function() {
  return this.setResponsesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    thingIdList: jspb.Message.toObjectList(msg.getThingIdList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance),
    reportType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestampStart: (f = msg.getTimestampStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timestampEnd: (f = msg.getTimestampEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest;
  return proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addThingId(value);
      break;
    case 2:
      var value = /** @type {!proto.xcite.iot.model.v1.ReportSchema} */ (reader.readEnum());
      msg.setReportType(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampStart(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThingIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getReportType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTimestampStart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimestampEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID thing_id = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.getThingIdList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.model.v1.UUID>} value
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} returns this
*/
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.setThingIdList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.addThingId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} returns this
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.clearThingIdList = function() {
  return this.setThingIdList([]);
};


/**
 * optional xcite.iot.model.v1.ReportSchema report_type = 2;
 * @return {!proto.xcite.iot.model.v1.ReportSchema}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.getReportType = function() {
  return /** @type {!proto.xcite.iot.model.v1.ReportSchema} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.xcite.iot.model.v1.ReportSchema} value
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} returns this
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.setReportType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp timestamp_start = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.getTimestampStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} returns this
*/
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.setTimestampStart = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} returns this
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.clearTimestampStart = function() {
  return this.setTimestampStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.hasTimestampStart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp_end = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.getTimestampEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} returns this
*/
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.setTimestampEnd = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest} returns this
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.clearTimestampEnd = function() {
  return this.setTimestampEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampRequest.prototype.hasTimestampEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportIdList: jspb.Message.toObjectList(msg.getReportIdList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse;
  return proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addReportId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID report_id = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.prototype.getReportIdList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/**
 * @param {!Array<!proto.xcite.iot.model.v1.UUID>} value
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse} returns this
*/
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.prototype.setReportIdList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.prototype.addReportId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse} returns this
 */
proto.xcite.iot.sensors.v1.DeleteReportsByTimestampResponse.prototype.clearReportIdList = function() {
  return this.setReportIdList([]);
};


goog.object.extend(exports, proto.xcite.iot.sensors.v1);
