 /* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var x$cite_io_protos_model_basic_pb = require('../../../x-cite.io/protos/model/basic_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_basic_pb);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.Address', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.CreateCustMessage', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.Customer', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.Customer.Type', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.CustomerList', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.Email', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.Telephone', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.UUIDList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.Customer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.Customer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.Customer.displayName = 'proto.xcite.iot.customerlifecycle.v1.Customer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.Address = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.Address, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.Address.displayName = 'proto.xcite.iot.customerlifecycle.v1.Address';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.Email = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.Email, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.Email.displayName = 'proto.xcite.iot.customerlifecycle.v1.Email';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.Telephone = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.Telephone, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.Telephone.displayName = 'proto.xcite.iot.customerlifecycle.v1.Telephone';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.displayName = 'proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.customerlifecycle.v1.UUIDList.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.UUIDList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.UUIDList.displayName = 'proto.xcite.iot.customerlifecycle.v1.UUIDList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.customerlifecycle.v1.CustomerList.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.CustomerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.CustomerList.displayName = 'proto.xcite.iot.customerlifecycle.v1.CustomerList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.CreateCustMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.displayName = 'proto.xcite.iot.customerlifecycle.v1.CreateCustMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.Customer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.Customer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Customer.toObject = function(includeInstance, msg) {
  var obj = {
    id: (f = msg.getId()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    customerNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastModified: (f = msg.getLastModified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    surname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    address: (f = msg.getAddress()) && proto.xcite.iot.customerlifecycle.v1.Address.toObject(includeInstance, f),
    billingAddress: (f = msg.getBillingAddress()) && proto.xcite.iot.customerlifecycle.v1.Address.toObject(includeInstance, f),
    email: (f = msg.getEmail()) && proto.xcite.iot.customerlifecycle.v1.Email.toObject(includeInstance, f),
    phone: (f = msg.getPhone()) && proto.xcite.iot.customerlifecycle.v1.Telephone.toObject(includeInstance, f),
    vat: jspb.Message.getFieldWithDefault(msg, 12, ""),
    language: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Customer}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.Customer;
  return proto.xcite.iot.customerlifecycle.v1.Customer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Customer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Customer}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerNumber(value);
      break;
    case 3:
      var value = /** @type {!proto.xcite.iot.customerlifecycle.v1.Customer.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastModified(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSurname(value);
      break;
    case 8:
      var value = new proto.xcite.iot.customerlifecycle.v1.Address;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 9:
      var value = new proto.xcite.iot.customerlifecycle.v1.Address;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Address.deserializeBinaryFromReader);
      msg.setBillingAddress(value);
      break;
    case 10:
      var value = new proto.xcite.iot.customerlifecycle.v1.Email;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Email.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 11:
      var value = new proto.xcite.iot.customerlifecycle.v1.Telephone;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Telephone.deserializeBinaryFromReader);
      msg.setPhone(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setVat(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.Customer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Customer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Customer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getCustomerNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastModified();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSurname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.xcite.iot.customerlifecycle.v1.Address.serializeBinaryToWriter
    );
  }
  f = message.getBillingAddress();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.xcite.iot.customerlifecycle.v1.Address.serializeBinaryToWriter
    );
  }
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.xcite.iot.customerlifecycle.v1.Email.serializeBinaryToWriter
    );
  }
  f = message.getPhone();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.xcite.iot.customerlifecycle.v1.Telephone.serializeBinaryToWriter
    );
  }
  f = message.getVat();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.Type = {
  CUSTOMER_NULL: 0,
  B2C: 1,
  B2B: 2
};

/**
 * optional xcite.iot.model.v1.UUID id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string customer_number = 2;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getCustomerNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setCustomerNumber = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Type type = 3;
 * @return {!proto.xcite.iot.customerlifecycle.v1.Customer.Type}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getType = function() {
  return /** @type {!proto.xcite.iot.customerlifecycle.v1.Customer.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.xcite.iot.customerlifecycle.v1.Customer.Type} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp created = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp last_modified = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getLastModified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setLastModified = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.clearLastModified = function() {
  this.setLastModified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.hasLastModified = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string surname = 7;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getSurname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setSurname = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Address address = 8;
 * @return {?proto.xcite.iot.customerlifecycle.v1.Address}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getAddress = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.Address} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Address, 8));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.Address|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Address billing_address = 9;
 * @return {?proto.xcite.iot.customerlifecycle.v1.Address}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getBillingAddress = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.Address} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Address, 9));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.Address|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setBillingAddress = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.clearBillingAddress = function() {
  this.setBillingAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.hasBillingAddress = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Email email = 10;
 * @return {?proto.xcite.iot.customerlifecycle.v1.Email}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getEmail = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.Email} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Email, 10));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.Email|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Telephone phone = 11;
 * @return {?proto.xcite.iot.customerlifecycle.v1.Telephone}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getPhone = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.Telephone} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Telephone, 11));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.Telephone|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setPhone = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.clearPhone = function() {
  this.setPhone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.hasPhone = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string vat = 12;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getVat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setVat = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string language = 13;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Customer.prototype.setLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.Address.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.Address} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Address.toObject = function(includeInstance, msg) {
  var obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    city: jspb.Message.getFieldWithDefault(msg, 2, ""),
    postcode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    stateProvince: jspb.Message.getFieldWithDefault(msg, 4, ""),
    streetName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    streetNr: jspb.Message.getFieldWithDefault(msg, 6, ""),
    appartmentNr: jspb.Message.getFieldWithDefault(msg, 7, ""),
    recipientName: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Address}
 */
proto.xcite.iot.customerlifecycle.v1.Address.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.Address;
  return proto.xcite.iot.customerlifecycle.v1.Address.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Address}
 */
proto.xcite.iot.customerlifecycle.v1.Address.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostcode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStateProvince(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetNr(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppartmentNr(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.Address.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Address.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPostcode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStateProvince();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStreetName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStreetNr();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAppartmentNr();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRecipientName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string country = 1;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string city = 2;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.setCity = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string postcode = 3;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.getPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.setPostcode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string state_province = 4;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.getStateProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.setStateProvince = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string street_name = 5;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.getStreetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.setStreetName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string street_nr = 6;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.getStreetNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.setStreetNr = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string appartment_nr = 7;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.getAppartmentNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.setAppartmentNr = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string recipient_name = 8;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.getRecipientName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Address.prototype.setRecipientName = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.Email.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.Email.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.Email} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Email.toObject = function(includeInstance, msg) {
  var obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Email}
 */
proto.xcite.iot.customerlifecycle.v1.Email.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.Email;
  return proto.xcite.iot.customerlifecycle.v1.Email.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Email} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Email}
 */
proto.xcite.iot.customerlifecycle.v1.Email.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.Email.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.Email.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Email} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Email.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Email.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Email.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.Telephone.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.Telephone.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.Telephone} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Telephone.toObject = function(includeInstance, msg) {
  var obj = {
    mobile: jspb.Message.getFieldWithDefault(msg, 1, ""),
    landline: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Telephone}
 */
proto.xcite.iot.customerlifecycle.v1.Telephone.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.Telephone;
  return proto.xcite.iot.customerlifecycle.v1.Telephone.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Telephone} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Telephone}
 */
proto.xcite.iot.customerlifecycle.v1.Telephone.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLandline(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.Telephone.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.Telephone.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Telephone} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Telephone.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLandline();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string mobile = 1;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Telephone.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Telephone.prototype.setMobile = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string landline = 2;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Telephone.prototype.getLandline = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Telephone.prototype.setLandline = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.toObject = function(includeInstance, msg) {
  var obj = {
    customer: (f = msg.getCustomer()) && proto.xcite.iot.customerlifecycle.v1.Customer.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest;
  return proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.customerlifecycle.v1.Customer;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Customer.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.customerlifecycle.v1.Customer.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional Customer customer = 1;
 * @return {?proto.xcite.iot.customerlifecycle.v1.Customer}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.getCustomer = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.Customer} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Customer, 1));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.Customer|undefined} value */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.setCustomer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.clearCustomer = function() {
  this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustomerRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.UUIDList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.UUIDList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.toObject = function(includeInstance, msg) {
  var obj = {
    idListList: jspb.Message.toObjectList(msg.getIdListList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.UUIDList}
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.UUIDList;
  return proto.xcite.iot.customerlifecycle.v1.UUIDList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.UUIDList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.UUIDList}
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.UUIDList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.UUIDList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID id_list = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.prototype.getIdListList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.UUID>} value */
proto.xcite.iot.customerlifecycle.v1.UUIDList.prototype.setIdListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.prototype.addIdList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.customerlifecycle.v1.UUIDList.prototype.clearIdListList = function() {
  this.setIdListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.CustomerList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.CustomerList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.toObject = function(includeInstance, msg) {
  var obj = {
    customerListList: jspb.Message.toObjectList(msg.getCustomerListList(),
    proto.xcite.iot.customerlifecycle.v1.Customer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CustomerList}
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.CustomerList;
  return proto.xcite.iot.customerlifecycle.v1.CustomerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CustomerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CustomerList}
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.customerlifecycle.v1.Customer;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Customer.deserializeBinaryFromReader);
      msg.addCustomerList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.CustomerList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CustomerList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.customerlifecycle.v1.Customer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Customer customer_list = 1;
 * @return {!Array<!proto.xcite.iot.customerlifecycle.v1.Customer>}
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.prototype.getCustomerListList = function() {
  return /** @type{!Array<!proto.xcite.iot.customerlifecycle.v1.Customer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Customer, 1));
};


/** @param {!Array<!proto.xcite.iot.customerlifecycle.v1.Customer>} value */
proto.xcite.iot.customerlifecycle.v1.CustomerList.prototype.setCustomerListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.customerlifecycle.v1.Customer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.customerlifecycle.v1.Customer}
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.prototype.addCustomerList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.customerlifecycle.v1.Customer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.customerlifecycle.v1.CustomerList.prototype.clearCustomerListList = function() {
  this.setCustomerListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateCustMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.toObject = function(includeInstance, msg) {
  var obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, false),
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreateCustMessage}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.CreateCustMessage;
  return proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateCustMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreateCustMessage}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateCustMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 2;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 2));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.CreateCustMessage.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.xcite.iot.customerlifecycle.v1);
