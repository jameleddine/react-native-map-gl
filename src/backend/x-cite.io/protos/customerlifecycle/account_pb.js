 /* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var x$cite_io_protos_model_basic_pb = require('../../../x-cite.io/protos/model/basic_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_basic_pb);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.Account', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.AccountBalance', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.AccountRef', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.BankAccount', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.CreateAccMessage', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.CreditCard', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.ListAccount', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.ListIDs', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.Money', null, global);
goog.exportSymbol('proto.xcite.iot.customerlifecycle.v1.TimePeriod', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.Account.displayName = 'proto.xcite.iot.customerlifecycle.v1.Account';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.AccountBalance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.AccountBalance.displayName = 'proto.xcite.iot.customerlifecycle.v1.AccountBalance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.AccountRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.AccountRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.AccountRef.displayName = 'proto.xcite.iot.customerlifecycle.v1.AccountRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.BankAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.BankAccount.displayName = 'proto.xcite.iot.customerlifecycle.v1.BankAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.CreditCard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.CreditCard.displayName = 'proto.xcite.iot.customerlifecycle.v1.CreditCard';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.Money = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.Money, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.Money.displayName = 'proto.xcite.iot.customerlifecycle.v1.Money';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.TimePeriod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.TimePeriod.displayName = 'proto.xcite.iot.customerlifecycle.v1.TimePeriod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.displayName = 'proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.customerlifecycle.v1.ListIDs.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.ListIDs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.ListIDs.displayName = 'proto.xcite.iot.customerlifecycle.v1.ListIDs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.iot.customerlifecycle.v1.ListAccount.repeatedFields_, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.ListAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.ListAccount.displayName = 'proto.xcite.iot.customerlifecycle.v1.ListAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.customerlifecycle.v1.CreateAccMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.displayName = 'proto.xcite.iot.customerlifecycle.v1.CreateAccMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Account.toObject = function(includeInstance, msg) {
  var obj = {
    id: (f = msg.getId()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    customerId: (f = msg.getCustomerId()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    ref: (f = msg.getRef()) && proto.xcite.iot.customerlifecycle.v1.AccountRef.toObject(includeInstance, f),
    balance: (f = msg.getBalance()) && proto.xcite.iot.customerlifecycle.v1.AccountBalance.toObject(includeInstance, f),
    bankAccount: (f = msg.getBankAccount()) && proto.xcite.iot.customerlifecycle.v1.BankAccount.toObject(includeInstance, f),
    card: (f = msg.getCard()) && proto.xcite.iot.customerlifecycle.v1.CreditCard.toObject(includeInstance, f),
    money: (f = msg.getMoney()) && proto.xcite.iot.customerlifecycle.v1.Money.toObject(includeInstance, f),
    timePeriod: (f = msg.getTimePeriod()) && proto.xcite.iot.customerlifecycle.v1.TimePeriod.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastModified: (f = msg.getLastModified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Account}
 */
proto.xcite.iot.customerlifecycle.v1.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.Account;
  return proto.xcite.iot.customerlifecycle.v1.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Account}
 */
proto.xcite.iot.customerlifecycle.v1.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setCustomerId(value);
      break;
    case 3:
      var value = new proto.xcite.iot.customerlifecycle.v1.AccountRef;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.AccountRef.deserializeBinaryFromReader);
      msg.setRef(value);
      break;
    case 4:
      var value = new proto.xcite.iot.customerlifecycle.v1.AccountBalance;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.AccountBalance.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    case 5:
      var value = new proto.xcite.iot.customerlifecycle.v1.BankAccount;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.BankAccount.deserializeBinaryFromReader);
      msg.setBankAccount(value);
      break;
    case 6:
      var value = new proto.xcite.iot.customerlifecycle.v1.CreditCard;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.CreditCard.deserializeBinaryFromReader);
      msg.setCard(value);
      break;
    case 7:
      var value = new proto.xcite.iot.customerlifecycle.v1.Money;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Money.deserializeBinaryFromReader);
      msg.setMoney(value);
      break;
    case 8:
      var value = new proto.xcite.iot.customerlifecycle.v1.TimePeriod;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.TimePeriod.deserializeBinaryFromReader);
      msg.setTimePeriod(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastModified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getCustomerId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getRef();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.xcite.iot.customerlifecycle.v1.AccountRef.serializeBinaryToWriter
    );
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.xcite.iot.customerlifecycle.v1.AccountBalance.serializeBinaryToWriter
    );
  }
  f = message.getBankAccount();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.xcite.iot.customerlifecycle.v1.BankAccount.serializeBinaryToWriter
    );
  }
  f = message.getCard();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.xcite.iot.customerlifecycle.v1.CreditCard.serializeBinaryToWriter
    );
  }
  f = message.getMoney();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.xcite.iot.customerlifecycle.v1.Money.serializeBinaryToWriter
    );
  }
  f = message.getTimePeriod();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.xcite.iot.customerlifecycle.v1.TimePeriod.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastModified();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID id = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional xcite.iot.model.v1.UUID customer_id = 2;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getCustomerId = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 2));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setCustomerId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearCustomerId = function() {
  this.setCustomerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasCustomerId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AccountRef ref = 3;
 * @return {?proto.xcite.iot.customerlifecycle.v1.AccountRef}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getRef = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.AccountRef} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.AccountRef, 3));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.AccountRef|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setRef = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearRef = function() {
  this.setRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasRef = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AccountBalance balance = 4;
 * @return {?proto.xcite.iot.customerlifecycle.v1.AccountBalance}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getBalance = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.AccountBalance} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.AccountBalance, 4));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.AccountBalance|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setBalance = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearBalance = function() {
  this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BankAccount bank_account = 5;
 * @return {?proto.xcite.iot.customerlifecycle.v1.BankAccount}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getBankAccount = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.BankAccount} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.BankAccount, 5));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.BankAccount|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setBankAccount = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearBankAccount = function() {
  this.setBankAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasBankAccount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CreditCard card = 6;
 * @return {?proto.xcite.iot.customerlifecycle.v1.CreditCard}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getCard = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.CreditCard} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.CreditCard, 6));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.CreditCard|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setCard = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearCard = function() {
  this.setCard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasCard = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Money money = 7;
 * @return {?proto.xcite.iot.customerlifecycle.v1.Money}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getMoney = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.Money} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Money, 7));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.Money|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setMoney = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearMoney = function() {
  this.setMoney(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasMoney = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TimePeriod time_period = 8;
 * @return {?proto.xcite.iot.customerlifecycle.v1.TimePeriod}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getTimePeriod = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.TimePeriod} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.TimePeriod, 8));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.TimePeriod|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setTimePeriod = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearTimePeriod = function() {
  this.setTimePeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasTimePeriod = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp created = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp last_modified = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.getLastModified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.setLastModified = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.clearLastModified = function() {
  this.setLastModified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.Account.prototype.hasLastModified = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.AccountBalance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.AccountBalance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.toObject = function(includeInstance, msg) {
  var obj = {
    money: (f = msg.getMoney()) && proto.xcite.iot.customerlifecycle.v1.Money.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    validityPeriod: (f = msg.getValidityPeriod()) && proto.xcite.iot.customerlifecycle.v1.TimePeriod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.AccountBalance}
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.AccountBalance;
  return proto.xcite.iot.customerlifecycle.v1.AccountBalance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.AccountBalance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.AccountBalance}
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.customerlifecycle.v1.Money;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Money.deserializeBinaryFromReader);
      msg.setMoney(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.xcite.iot.customerlifecycle.v1.TimePeriod;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.TimePeriod.deserializeBinaryFromReader);
      msg.setValidityPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.AccountBalance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.AccountBalance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoney();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.customerlifecycle.v1.Money.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValidityPeriod();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.xcite.iot.customerlifecycle.v1.TimePeriod.serializeBinaryToWriter
    );
  }
};


/**
 * optional Money money = 1;
 * @return {?proto.xcite.iot.customerlifecycle.v1.Money}
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.getMoney = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.Money} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Money, 1));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.Money|undefined} value */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.setMoney = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.clearMoney = function() {
  this.setMoney(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.hasMoney = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TimePeriod validity_period = 3;
 * @return {?proto.xcite.iot.customerlifecycle.v1.TimePeriod}
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.getValidityPeriod = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.TimePeriod} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.TimePeriod, 3));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.TimePeriod|undefined} value */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.setValidityPeriod = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.clearValidityPeriod = function() {
  this.setValidityPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.AccountBalance.prototype.hasValidityPeriod = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.AccountRef.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.AccountRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.AccountRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.AccountRef.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.AccountRef}
 */
proto.xcite.iot.customerlifecycle.v1.AccountRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.AccountRef;
  return proto.xcite.iot.customerlifecycle.v1.AccountRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.AccountRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.AccountRef}
 */
proto.xcite.iot.customerlifecycle.v1.AccountRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.AccountRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.AccountRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.AccountRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.AccountRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.AccountRef.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.AccountRef.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.BankAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.BankAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.toObject = function(includeInstance, msg) {
  var obj = {
    bic: jspb.Message.getFieldWithDefault(msg, 1, ""),
    iban: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountHolder: jspb.Message.getFieldWithDefault(msg, 3, ""),
    domiciliation: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.BankAccount}
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.BankAccount;
  return proto.xcite.iot.customerlifecycle.v1.BankAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.BankAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.BankAccount}
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBic(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIban(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountHolder(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomiciliation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.BankAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.BankAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBic();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIban();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountHolder();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDomiciliation();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string bic = 1;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.getBic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.setBic = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string iban = 2;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.getIban = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.setIban = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string account_holder = 3;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.getAccountHolder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.setAccountHolder = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string domiciliation = 4;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.getDomiciliation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.BankAccount.prototype.setDomiciliation = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.CreditCard.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreditCard} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.toObject = function(includeInstance, msg) {
  var obj = {
    creditcardHolder: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expirationDate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    number: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreditCard}
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.CreditCard;
  return proto.xcite.iot.customerlifecycle.v1.CreditCard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreditCard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreditCard}
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreditcardHolder(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpirationDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.CreditCard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreditCard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreditcardHolder();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpirationDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string creditcard_holder = 1;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.getCreditcardHolder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.setCreditcardHolder = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string expiration_date = 2;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.getExpirationDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.setExpirationDate = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string number = 3;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.getNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.setNumber = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.CreditCard.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.Money.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.Money.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.Money} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Money.toObject = function(includeInstance, msg) {
  var obj = {
    unit: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Money}
 */
proto.xcite.iot.customerlifecycle.v1.Money.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.Money;
  return proto.xcite.iot.customerlifecycle.v1.Money.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Money} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.Money}
 */
proto.xcite.iot.customerlifecycle.v1.Money.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.Money.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.Money.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.Money} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.Money.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnit();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional string unit = 1;
 * @return {string}
 */
proto.xcite.iot.customerlifecycle.v1.Money.prototype.getUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.iot.customerlifecycle.v1.Money.prototype.setUnit = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float value = 2;
 * @return {number}
 */
proto.xcite.iot.customerlifecycle.v1.Money.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.xcite.iot.customerlifecycle.v1.Money.prototype.setValue = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.TimePeriod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.TimePeriod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.toObject = function(includeInstance, msg) {
  var obj = {
    end: (f = msg.getEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    start: (f = msg.getStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.TimePeriod}
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.TimePeriod;
  return proto.xcite.iot.customerlifecycle.v1.TimePeriod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.TimePeriod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.TimePeriod}
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.TimePeriod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.TimePeriod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp end = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.getEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.setEnd = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp start = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.getStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.setStart = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.clearStart = function() {
  this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.TimePeriod.prototype.hasStart = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.toObject = function(includeInstance, msg) {
  var obj = {
    account: (f = msg.getAccount()) && proto.xcite.iot.customerlifecycle.v1.Account.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest;
  return proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.customerlifecycle.v1.Account;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Account.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.iot.customerlifecycle.v1.Account.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional Account account = 1;
 * @return {?proto.xcite.iot.customerlifecycle.v1.Account}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.getAccount = function() {
  return /** @type{?proto.xcite.iot.customerlifecycle.v1.Account} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Account, 1));
};


/** @param {?proto.xcite.iot.customerlifecycle.v1.Account|undefined} value */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.setAccount = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.clearAccount = function() {
  this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccountRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.ListIDs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.ListIDs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.toObject = function(includeInstance, msg) {
  var obj = {
    idListList: jspb.Message.toObjectList(msg.getIdListList(),
    x$cite_io_protos_model_basic_pb.UUID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.ListIDs}
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.ListIDs;
  return proto.xcite.iot.customerlifecycle.v1.ListIDs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.ListIDs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.ListIDs}
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.addIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.ListIDs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.ListIDs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated xcite.iot.model.v1.UUID id_list = 1;
 * @return {!Array<!proto.xcite.iot.model.v1.UUID>}
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.prototype.getIdListList = function() {
  return /** @type{!Array<!proto.xcite.iot.model.v1.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {!Array<!proto.xcite.iot.model.v1.UUID>} value */
proto.xcite.iot.customerlifecycle.v1.ListIDs.prototype.setIdListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.model.v1.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.prototype.addIdList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.model.v1.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.customerlifecycle.v1.ListIDs.prototype.clearIdListList = function() {
  this.setIdListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.ListAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.ListAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.toObject = function(includeInstance, msg) {
  var obj = {
    accountListList: jspb.Message.toObjectList(msg.getAccountListList(),
    proto.xcite.iot.customerlifecycle.v1.Account.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.ListAccount}
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.ListAccount;
  return proto.xcite.iot.customerlifecycle.v1.ListAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.ListAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.ListAccount}
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.iot.customerlifecycle.v1.Account;
      reader.readMessage(value,proto.xcite.iot.customerlifecycle.v1.Account.deserializeBinaryFromReader);
      msg.addAccountList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.ListAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.ListAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcite.iot.customerlifecycle.v1.Account.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Account account_list = 1;
 * @return {!Array<!proto.xcite.iot.customerlifecycle.v1.Account>}
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.prototype.getAccountListList = function() {
  return /** @type{!Array<!proto.xcite.iot.customerlifecycle.v1.Account>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.iot.customerlifecycle.v1.Account, 1));
};


/** @param {!Array<!proto.xcite.iot.customerlifecycle.v1.Account>} value */
proto.xcite.iot.customerlifecycle.v1.ListAccount.prototype.setAccountListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcite.iot.customerlifecycle.v1.Account=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.iot.customerlifecycle.v1.Account}
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.prototype.addAccountList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcite.iot.customerlifecycle.v1.Account, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.xcite.iot.customerlifecycle.v1.ListAccount.prototype.clearAccountListList = function() {
  this.setAccountListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateAccMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.toObject = function(includeInstance, msg) {
  var obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, false),
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreateAccMessage}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.customerlifecycle.v1.CreateAccMessage;
  return proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateAccMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.customerlifecycle.v1.CreateAccMessage}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.customerlifecycle.v1.CreateAccMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 2;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 2));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.customerlifecycle.v1.CreateAccMessage.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.xcite.iot.customerlifecycle.v1);
