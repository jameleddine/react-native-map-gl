 /* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.xcite.a2p.model.v1.ChargingSession', null, global);
goog.exportSymbol('proto.xcite.a2p.model.v1.ChargingSession.Status', null, global);
goog.exportSymbol('proto.xcite.a2p.model.v1.GetTransactionHistoryResponse', null, global);
goog.exportSymbol('proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point', null, global);
goog.exportSymbol('proto.xcite.a2p.model.v1.QueryStatusRequest', null, global);
goog.exportSymbol('proto.xcite.a2p.model.v1.SMS', null, global);
goog.exportSymbol('proto.xcite.a2p.model.v1.SMS.Type', null, global);
goog.exportSymbol('proto.xcite.a2p.model.v1.UUID', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.a2p.model.v1.UUID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.a2p.model.v1.UUID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.xcite.a2p.model.v1.UUID.displayName = 'proto.xcite.a2p.model.v1.UUID';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.a2p.model.v1.UUID.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.a2p.model.v1.UUID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.a2p.model.v1.UUID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.UUID.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.a2p.model.v1.UUID}
 */
proto.xcite.a2p.model.v1.UUID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.a2p.model.v1.UUID;
  return proto.xcite.a2p.model.v1.UUID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.a2p.model.v1.UUID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.a2p.model.v1.UUID}
 */
proto.xcite.a2p.model.v1.UUID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.a2p.model.v1.UUID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.a2p.model.v1.UUID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.a2p.model.v1.UUID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.UUID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.xcite.a2p.model.v1.UUID.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.UUID.prototype.setUuid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.a2p.model.v1.SMS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.a2p.model.v1.SMS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.xcite.a2p.model.v1.SMS.displayName = 'proto.xcite.a2p.model.v1.SMS';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.a2p.model.v1.SMS.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.a2p.model.v1.SMS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.a2p.model.v1.SMS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.SMS.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sender: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.a2p.model.v1.SMS}
 */
proto.xcite.a2p.model.v1.SMS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.a2p.model.v1.SMS;
  return proto.xcite.a2p.model.v1.SMS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.a2p.model.v1.SMS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.a2p.model.v1.SMS}
 */
proto.xcite.a2p.model.v1.SMS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {!proto.xcite.a2p.model.v1.SMS.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.a2p.model.v1.SMS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.a2p.model.v1.SMS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.a2p.model.v1.SMS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.SMS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.xcite.a2p.model.v1.SMS.Type = {
  TEXT: 0,
  BINARY: 1
};

/**
 * optional string destination = 1;
 * @return {string}
 */
proto.xcite.a2p.model.v1.SMS.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.SMS.prototype.setDestination = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.xcite.a2p.model.v1.SMS.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.SMS.prototype.setSender = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.xcite.a2p.model.v1.SMS.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.SMS.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Type type = 4;
 * @return {!proto.xcite.a2p.model.v1.SMS.Type}
 */
proto.xcite.a2p.model.v1.SMS.prototype.getType = function() {
  return /** @type {!proto.xcite.a2p.model.v1.SMS.Type} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.xcite.a2p.model.v1.SMS.Type} value */
proto.xcite.a2p.model.v1.SMS.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.a2p.model.v1.QueryStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.a2p.model.v1.QueryStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.xcite.a2p.model.v1.QueryStatusRequest.displayName = 'proto.xcite.a2p.model.v1.QueryStatusRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.a2p.model.v1.QueryStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.a2p.model.v1.QueryStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.a2p.model.v1.QueryStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.QueryStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.a2p.model.v1.QueryStatusRequest}
 */
proto.xcite.a2p.model.v1.QueryStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.a2p.model.v1.QueryStatusRequest;
  return proto.xcite.a2p.model.v1.QueryStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.a2p.model.v1.QueryStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.a2p.model.v1.QueryStatusRequest}
 */
proto.xcite.a2p.model.v1.QueryStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.a2p.model.v1.QueryStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.a2p.model.v1.QueryStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.a2p.model.v1.QueryStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.QueryStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.xcite.a2p.model.v1.QueryStatusRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.QueryStatusRequest.prototype.setMessageId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.a2p.model.v1.ChargingSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.a2p.model.v1.ChargingSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.xcite.a2p.model.v1.ChargingSession.displayName = 'proto.xcite.a2p.model.v1.ChargingSession';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.a2p.model.v1.ChargingSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.a2p.model.v1.ChargingSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.ChargingSession.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.xcite.a2p.model.v1.UUID.toObject(includeInstance, f),
    subscriber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    submittedDate: (f = msg.getSubmittedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    finalDate: (f = msg.getFinalDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.a2p.model.v1.ChargingSession}
 */
proto.xcite.a2p.model.v1.ChargingSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.a2p.model.v1.ChargingSession;
  return proto.xcite.a2p.model.v1.ChargingSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.a2p.model.v1.ChargingSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.a2p.model.v1.ChargingSession}
 */
proto.xcite.a2p.model.v1.ChargingSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcite.a2p.model.v1.UUID;
      reader.readMessage(value,proto.xcite.a2p.model.v1.UUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubscriber(value);
      break;
    case 3:
      var value = /** @type {!proto.xcite.a2p.model.v1.ChargingSession.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSubmittedDate(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFinalDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.a2p.model.v1.ChargingSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.a2p.model.v1.ChargingSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.ChargingSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcite.a2p.model.v1.UUID.serializeBinaryToWriter
    );
  }
  f = message.getSubscriber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSubmittedDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFinalDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.xcite.a2p.model.v1.ChargingSession.Status = {
  SUBMITTED: 0,
  DELIVERED: 1,
  FAILED: 2
};

/**
 * optional UUID id = 1;
 * @return {?proto.xcite.a2p.model.v1.UUID}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.getId = function() {
  return /** @type{?proto.xcite.a2p.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, proto.xcite.a2p.model.v1.UUID, 1));
};


/** @param {?proto.xcite.a2p.model.v1.UUID|undefined} value */
proto.xcite.a2p.model.v1.ChargingSession.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.xcite.a2p.model.v1.ChargingSession.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 subscriber = 2;
 * @return {number}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.getSubscriber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.xcite.a2p.model.v1.ChargingSession.prototype.setSubscriber = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Status status = 3;
 * @return {!proto.xcite.a2p.model.v1.ChargingSession.Status}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.getStatus = function() {
  return /** @type {!proto.xcite.a2p.model.v1.ChargingSession.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.xcite.a2p.model.v1.ChargingSession.Status} value */
proto.xcite.a2p.model.v1.ChargingSession.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp submitted_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.getSubmittedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.a2p.model.v1.ChargingSession.prototype.setSubmittedDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.xcite.a2p.model.v1.ChargingSession.prototype.clearSubmittedDate = function() {
  this.setSubmittedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.hasSubmittedDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp final_date = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.getFinalDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.a2p.model.v1.ChargingSession.prototype.setFinalDate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.xcite.a2p.model.v1.ChargingSession.prototype.clearFinalDate = function() {
  this.setFinalDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.xcite.a2p.model.v1.ChargingSession.prototype.hasFinalDate = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.xcite.a2p.model.v1.GetTransactionHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.displayName = 'proto.xcite.a2p.model.v1.GetTransactionHistoryResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    detailsList: jspb.Message.toObjectList(msg.getDetailsList(),
    proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.a2p.model.v1.GetTransactionHistoryResponse;
  return proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point;
      reader.readMessage(value,proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.deserializeBinaryFromReader);
      msg.addDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.displayName = 'proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.toObject = function(includeInstance, msg) {
  var f, obj = {
    cost: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sender: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destination: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timestampfinalization: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timestampinitialisation: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customerreference: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point;
  return proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCost(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestampfinalization(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestampinitialisation(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerreference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimestampfinalization();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimestampinitialisation();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomerreference();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string cost = 1;
 * @return {string}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.getCost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.setCost = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.setSender = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string destination = 3;
 * @return {string}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.setDestination = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string status = 4;
 * @return {string}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string timestampFinalization = 5;
 * @return {string}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.getTimestampfinalization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.setTimestampfinalization = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string timestampInitialisation = 6;
 * @return {string}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.getTimestampinitialisation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.setTimestampinitialisation = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string customerReference = 7;
 * @return {string}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.getCustomerreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point.prototype.setCustomerreference = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated Point details = 2;
 * @return {!Array<!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point>}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.prototype.getDetailsList = function() {
  return /** @type{!Array<!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point, 2));
};


/** @param {!Array<!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point>} value */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.prototype.setDetailsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point}
 */
proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.prototype.addDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.Point, opt_index);
};


proto.xcite.a2p.model.v1.GetTransactionHistoryResponse.prototype.clearDetailsList = function() {
  this.setDetailsList([]);
};


goog.object.extend(exports, proto.xcite.a2p.model.v1);
