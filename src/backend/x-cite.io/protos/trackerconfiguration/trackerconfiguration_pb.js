 /* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var x$cite_io_protos_model_basic_pb = require('../../../x-cite.io/protos/model/basic_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_basic_pb);
var x$cite_io_protos_model_tracking_pb = require('../../../x-cite.io/protos/model/tracking_pb.js');
goog.object.extend(proto, x$cite_io_protos_model_tracking_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.ConfigRequest', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.DayMask', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse', null, global);
goog.exportSymbol('proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.displayName = 'proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.displayName = 'proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.displayName = 'proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.ConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.displayName = 'proto.xcite.iot.trackerconfiguration.v1.ConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.displayName = 'proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.displayName = 'proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.DayMask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.DayMask.displayName = 'proto.xcite.iot.trackerconfiguration.v1.DayMask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.displayName = 'proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.displayName = 'proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.displayName = 'proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.displayName = 'proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    apn: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest;
  return proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getApn();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string apn = 2;
 * @return {string}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.prototype.getApn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigureAPNRequest.prototype.setApn = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    ip: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest;
  return proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ip = 3;
 * @return {string}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.setIp = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 port = 4;
 * @return {number}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigureHostRequest.prototype.setPort = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    format: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest;
  return proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getFormat();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string format = 2;
 * @return {string}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.prototype.getFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigureFormatRequest.prototype.setFormat = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.ConfigRequest;
  return proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest;
  return proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {!proto.xcite.iot.model.v1.TrackerStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional xcite.iot.model.v1.TrackerStatus status = 2;
 * @return {!proto.xcite.iot.model.v1.TrackerStatus}
 */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.prototype.getStatus = function() {
  return /** @type {!proto.xcite.iot.model.v1.TrackerStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.xcite.iot.model.v1.TrackerStatus} value */
proto.xcite.iot.trackerconfiguration.v1.UpdateStaticReportingRequest.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.toObject = function(includeInstance, msg) {
  var obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse}
 */
proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse;
  return proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse}
 */
proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.xcite.iot.model.v1.TrackerStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional xcite.iot.model.v1.TrackerStatus status = 1;
 * @return {!proto.xcite.iot.model.v1.TrackerStatus}
 */
proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.xcite.iot.model.v1.TrackerStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.xcite.iot.model.v1.TrackerStatus} value */
proto.xcite.iot.trackerconfiguration.v1.TrackerStatusResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.DayMask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.DayMask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.toObject = function(includeInstance, msg) {
  var obj = {
    sunday: jspb.Message.getFieldWithDefault(msg, 1, false),
    monday: jspb.Message.getFieldWithDefault(msg, 2, false),
    tuesday: jspb.Message.getFieldWithDefault(msg, 3, false),
    wednesday: jspb.Message.getFieldWithDefault(msg, 4, false),
    thursday: jspb.Message.getFieldWithDefault(msg, 5, false),
    friday: jspb.Message.getFieldWithDefault(msg, 6, false),
    saturday: jspb.Message.getFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.DayMask}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.DayMask;
  return proto.xcite.iot.trackerconfiguration.v1.DayMask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.DayMask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.DayMask}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSunday(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMonday(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTuesday(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWednesday(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setThursday(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFriday(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSaturday(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.DayMask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.DayMask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSunday();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMonday();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTuesday();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getWednesday();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getThursday();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getFriday();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getSaturday();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional bool sunday = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.getSunday = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.setSunday = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool monday = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.getMonday = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.setMonday = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool tuesday = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.getTuesday = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.setTuesday = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool wednesday = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.getWednesday = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.setWednesday = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool thursday = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.getThursday = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.setThursday = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool friday = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.getFriday = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.setFriday = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool saturday = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.getSaturday = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.xcite.iot.trackerconfiguration.v1.DayMask.prototype.setSaturday = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    timer: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    days: (f = msg.getDays()) && proto.xcite.iot.trackerconfiguration.v1.DayMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest;
  return proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimer(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 5:
      var value = new proto.xcite.iot.trackerconfiguration.v1.DayMask;
      reader.readMessage(value,proto.xcite.iot.trackerconfiguration.v1.DayMask.deserializeBinaryFromReader);
      msg.setDays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTimer();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDays();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.xcite.iot.trackerconfiguration.v1.DayMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 timer = 2;
 * @return {number}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.getTimer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.setTimer = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DayMask days = 5;
 * @return {?proto.xcite.iot.trackerconfiguration.v1.DayMask}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.getDays = function() {
  return /** @type{?proto.xcite.iot.trackerconfiguration.v1.DayMask} */ (
    jspb.Message.getWrapperField(this, proto.xcite.iot.trackerconfiguration.v1.DayMask, 5));
};


/** @param {?proto.xcite.iot.trackerconfiguration.v1.DayMask|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.setDays = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.clearDays = function() {
  this.setDays(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTimerRequest.prototype.hasDays = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest;
  return proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp start_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.toObject = function(includeInstance, msg) {
  var obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse;
  return proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.ConfigTrackingPeriodResponse.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.toObject = function(includeInstance, msg) {
  var obj = {
    uuid: (f = msg.getUuid()) && x$cite_io_protos_model_basic_pb.UUID.toObject(includeInstance, f),
    timer: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest;
  return proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest}
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new x$cite_io_protos_model_basic_pb.UUID;
      reader.readMessage(value,x$cite_io_protos_model_basic_pb.UUID.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      x$cite_io_protos_model_basic_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getTimer();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional xcite.iot.model.v1.UUID uuid = 1;
 * @return {?proto.xcite.iot.model.v1.UUID}
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.prototype.getUuid = function() {
  return /** @type{?proto.xcite.iot.model.v1.UUID} */ (
    jspb.Message.getWrapperField(this, x$cite_io_protos_model_basic_pb.UUID, 1));
};


/** @param {?proto.xcite.iot.model.v1.UUID|undefined} value */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.prototype.setUuid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.prototype.clearUuid = function() {
  this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 timer = 2;
 * @return {number}
 */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.prototype.getTimer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.xcite.iot.trackerconfiguration.v1.DisabletimerRequest.prototype.setTimer = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.xcite.iot.trackerconfiguration.v1);
